

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Sat Aug 20 16:08:00 2016

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F690
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 20 "C:/Users/Dave/MPLABXProjects/CLDC001.X/CLDC001.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 20 "C:/Users/Dave/MPLABXProjects/CLDC001.X/CLDC001.c"
    45  2007  3FD4               	dw 0x3FFC & 0x3FF7 & 0x3FDF & 0x3FFF ;#
    46                           	FNCALL	_main,_lcd_init
    47                           	FNCALL	_main,_onewire_init
    48                           	FNCALL	_main,_lcd_clear
    49                           	FNCALL	_main,_lcd_goto
    50                           	FNCALL	_main,_lcd_puts
    51                           	FNCALL	_main,_onewire_listen
    52                           	FNCALL	_main,_RecieveSensorData
    53                           	FNCALL	_main,_ReceivePage
    54                           	FNCALL	_RecieveSensorData,_onewire_listen
    55                           	FNCALL	_RecieveSensorData,___bmul
    56                           	FNCALL	_RecieveSensorData,_RefreshDisplay
    57                           	FNCALL	_ReceivePage,_onewire_listen
    58                           	FNCALL	_ReceivePage,_RefreshDisplay
    59                           	FNCALL	_RefreshDisplay,_lcd_clear
    60                           	FNCALL	_RefreshDisplay,_lcd_goto
    61                           	FNCALL	_RefreshDisplay,_lcd_puts
    62                           	FNCALL	_RefreshDisplay,_lcd_putch
    63                           	FNCALL	_RefreshDisplay,___bmul
    64                           	FNCALL	_RefreshDisplay,_DisplayData
    65                           	FNCALL	_lcd_init,_pause
    66                           	FNCALL	_lcd_init,_lcd_write
    67                           	FNCALL	_lcd_init,_lcd_clear
    68                           	FNCALL	_DisplayData,___awdiv
    69                           	FNCALL	_DisplayData,___awmod
    70                           	FNCALL	_DisplayData,_lcd_putch
    71                           	FNCALL	_DisplayData,_lcd_puts
    72                           	FNCALL	_lcd_goto,_lcd_write
    73                           	FNCALL	_lcd_clear,_lcd_write
    74                           	FNCALL	_lcd_clear,_pause
    75                           	FNCALL	_lcd_puts,_lcd_write
    76                           	FNCALL	_lcd_putch,_lcd_write
    77                           	FNCALL	_lcd_write,_pause
    78                           	FNCALL	_onewire_listen,_onewire_read
    79                           	FNCALL	_pause,_msecbase
    80                           	FNROOT	_main
    81                           	global	_DisplayPage
    82                           psect	idataBANK0,class=CODE,space=0,delta=2
    83                           global __pidataBANK0
    84  0330                     __pidataBANK0:
    85                           	file	"C:/Users/Dave/MPLABXProjects/CLDC001.X/CLDC001.c"
    86                           	line	27
    87                           
    88                           ;initializer for _DisplayPage
    89  0330  3401               	retlw	01h
    90                           	global	_DataArray
    91                           	global	_b0
    92                           	global	_PORTB
    93  0006                     _PORTB	set	6
    94                           	global	_PORTC
    95  0007                     _PORTC	set	7
    96                           	global	_RCREG
    97  001A                     _RCREG	set	26
    98                           	global	_RCSTA
    99  0018                     _RCSTA	set	24
   100                           	global	_TMR0
   101  0001                     _TMR0	set	1
   102                           	global	_TXREG
   103  0019                     _TXREG	set	25
   104                           	global	_CARRY
   105  0018                     _CARRY	set	24
   106                           	global	_GIE
   107  005F                     _GIE	set	95
   108                           	global	_RA1
   109  0029                     _RA1	set	41
   110                           	global	_RA2
   111  002A                     _RA2	set	42
   112                           	global	_RA4
   113  002C                     _RA4	set	44
   114                           	global	_RCIF
   115  0065                     _RCIF	set	101
   116                           	global	_T0IF
   117  005A                     _T0IF	set	90
   118                           	global	_TXIF
   119  0064                     _TXIF	set	100
   120                           	global	_BAUDCTL
   121  009B                     _BAUDCTL	set	155
   122                           	global	_OPTION
   123  0081                     _OPTION	set	129
   124                           	global	_OSCCON
   125  008F                     _OSCCON	set	143
   126                           	global	_SPBRG
   127  0099                     _SPBRG	set	153
   128                           	global	_TRISA
   129  0085                     _TRISA	set	133
   130                           	global	_TRISB
   131  0086                     _TRISB	set	134
   132                           	global	_TRISC
   133  0087                     _TRISC	set	135
   134                           	global	_TXSTA
   135  0098                     _TXSTA	set	152
   136                           	global	_TRISB5
   137  0435                     _TRISB5	set	1077
   138                           	global	_TRISB7
   139  0437                     _TRISB7	set	1079
   140                           	global	_ANSEL
   141  011E                     _ANSEL	set	286
   142                           	global	_ANSELH
   143  011F                     _ANSELH	set	287
   144                           	global	_CM1CON0
   145  0119                     _CM1CON0	set	281
   146                           	global	_CM2CON0
   147  011A                     _CM2CON0	set	282
   148                           	global	_EEADR
   149  010D                     _EEADR	set	269
   150                           	global	_EEDATA
   151  010C                     _EEDATA	set	268
   152                           	global	_EECON1
   153  018C                     _EECON1	set	396
   154                           	global	_EECON2
   155  018D                     _EECON2	set	397
   156                           	global	_RD
   157  0C60                     _RD	set	3168
   158                           	global	_WR
   159  0C61                     _WR	set	3169
   160                           	global	_WREN
   161  0C62                     _WREN	set	3170
   162                           psect	strings,class=STRING,delta=2
   163                           global __pstrings
   164  0002                     __pstrings:
   165                           ;	global	stringdir,stringtab,__stringbase
   166  0002                     stringtab:
   167                           ;	String table - string pointers are 1 byte each
   168  0002                     stringcode:stringdir:
      + 0002                     stringdir:	
   169  0002  3000               movlw high(stringdir)
   170  0003  008A               movwf pclath
   171  0004  0804               movf fsr,w
   172  0005  0A84               incf fsr
   173  0006  0782               	addwf pc
   174  0007                     __stringbase:
   175  0007  3400               	retlw	0
   176                           psect	strings
   177                           	
   178  0008                     STR_9:	
   179  0008  3449               	retlw	73	;'I'
   180  0009  346E               	retlw	110	;'n'
   181  000A  3469               	retlw	105	;'i'
   182  000B  3474               	retlw	116	;'t'
   183  000C  3469               	retlw	105	;'i'
   184  000D  3461               	retlw	97	;'a'
   185  000E  346C               	retlw	108	;'l'
   186  000F  3469               	retlw	105	;'i'
   187  0010  3473               	retlw	115	;'s'
   188  0011  3469               	retlw	105	;'i'
   189  0012  346E               	retlw	110	;'n'
   190  0013  3467               	retlw	103	;'g'
   191  0014  342E               	retlw	46	;'.'
   192  0015  342E               	retlw	46	;'.'
   193  0016  342E               	retlw	46	;'.'
   194  0017  3400               	retlw	0
   195                           psect	strings
   196                           	
   197  0018                     STR_8:	
   198  0018  3420               	retlw	32	;' '
   199  0019  3420               	retlw	32	;' '
   200  001A  3420               	retlw	32	;' '
   201  001B  3420               	retlw	32	;' '
   202  001C  3443               	retlw	67	;'C'
   203  001D  346F               	retlw	111	;'o'
   204  001E  3473               	retlw	115	;'s'
   205  001F  3479               	retlw	121	;'y'
   206  0020  3420               	retlw	32	;' '
   207  0021  344C               	retlw	76	;'L'
   208  0022  3469               	retlw	105	;'i'
   209  0023  347A               	retlw	122	;'z'
   210  0024  3461               	retlw	97	;'a'
   211  0025  3472               	retlw	114	;'r'
   212  0026  3464               	retlw	100	;'d'
   213  0027  3400               	retlw	0
   214                           psect	strings
   215                           	
   216  0028                     STR_2:	
   217  0028  3443               	retlw	67	;'C'
   218  0029  346F               	retlw	111	;'o'
   219  002A  346E               	retlw	110	;'n'
   220  002B  3474               	retlw	116	;'t'
   221  002C  3472               	retlw	114	;'r'
   222  002D  346F               	retlw	111	;'o'
   223  002E  346C               	retlw	108	;'l'
   224  002F  346C               	retlw	108	;'l'
   225  0030  3465               	retlw	101	;'e'
   226  0031  3472               	retlw	114	;'r'
   227  0032  3420               	retlw	32	;' '
   228  0033  3400               	retlw	0
   229                           psect	strings
   230                           	
   231  0034                     STR_7:	
   232  0034  3448               	retlw	72	;'H'
   233  0035  3475               	retlw	117	;'u'
   234  0036  346D               	retlw	109	;'m'
   235  0037  3469               	retlw	105	;'i'
   236  0038  3464               	retlw	100	;'d'
   237  0039  3469               	retlw	105	;'i'
   238  003A  3474               	retlw	116	;'t'
   239  003B  3479               	retlw	121	;'y'
   240  003C  3420               	retlw	32	;' '
   241  003D  3400               	retlw	0
   242                           psect	strings
   243                           	
   244  003E                     STR_4:	
   245  003E  3420               	retlw	32	;' '
   246  003F  3454               	retlw	84	;'T'
   247  0040  346D               	retlw	109	;'m'
   248  0041  3470               	retlw	112	;'p'
   249  0042  3432               	retlw	50	;'2'
   250  0043  3420               	retlw	32	;' '
   251  0044  3400               	retlw	0
   252                           psect	strings
   253                           	
   254  0045                     STR_6:	
   255  0045  3420               	retlw	32	;' '
   256  0046  3454               	retlw	84	;'T'
   257  0047  346D               	retlw	109	;'m'
   258  0048  3470               	retlw	112	;'p'
   259  0049  3434               	retlw	52	;'4'
   260  004A  3420               	retlw	32	;' '
   261  004B  3400               	retlw	0
   262                           psect	strings
   263                           	
   264  004C                     STR_3:	
   265  004C  3454               	retlw	84	;'T'
   266  004D  346D               	retlw	109	;'m'
   267  004E  3470               	retlw	112	;'p'
   268  004F  3431               	retlw	49	;'1'
   269  0050  3420               	retlw	32	;' '
   270  0051  3400               	retlw	0
   271                           psect	strings
   272                           	
   273  0052                     STR_5:	
   274  0052  3454               	retlw	84	;'T'
   275  0053  346D               	retlw	109	;'m'
   276  0054  3470               	retlw	112	;'p'
   277  0055  3433               	retlw	51	;'3'
   278  0056  3420               	retlw	32	;' '
   279  0057  3400               	retlw	0
   280                           psect	strings
   281  0016                     STR_1	equ	STR_9+14
   282                           	file	"C:\Users\Dave\AppData\Local\Temp\s7ks."
   283                           	line	#
   284                           psect cinit,class=CODE,delta=2
   285                           global start_initialization
   286  035D                     start_initialization:
   287                           
   288                           psect	bssBANK0,class=BANK0,space=1
   289                           global __pbssBANK0
   290  0020                     __pbssBANK0:
   291  0020                     _DataArray:
   292  0020                            ds      40
   293                           
   294  0048                     _b0:
   295  0048                            ds      1
   296                           
   297                           psect	dataBANK0,class=BANK0,space=1
   298                           global __pdataBANK0
   299  005E                     __pdataBANK0:
   300                           	file	"C:/Users/Dave/MPLABXProjects/CLDC001.X/CLDC001.c"
   301  005E                     _DisplayPage:
   302  005E                            ds      1
   303                           
   304                           psect clrtext,class=CODE,delta=2
   305                           global clear_ram
   306                           ;	Called with FSR containing the base address, and
   307                           ;	W with the last address+1
   308  0335                     clear_ram:
   309  0335  0064               	clrwdt			;clear the watchdog before getting into this loop
   310  0336                     clrloop:
   311  0336  0180               	clrf	indf		;clear RAM location pointed to by FSR
   312  0337  0A84               	incf	fsr,f		;increment pointer
   313  0338  0604               	xorwf	fsr,w		;XOR with final address
   314  0339  1903               	btfsc	status,2	;have we reached the end yet?
   315  033A  3400               	retlw	0		;all done for this memory range, return
   316  033B  0604               	xorwf	fsr,w		;XOR again to restore value
   317  033C  2B36               	goto	clrloop		;do the next byte
   318                           
   319                           ; Clear objects allocated to BANK0
   320                           psect cinit,class=CODE,delta=2
   321  035D  1383               	bcf	status, 7	;select IRP bank0
   322  035E  3020               	movlw	low(__pbssBANK0)
   323  035F  0084               	movwf	fsr
   324  0360  3049               	movlw	low((__pbssBANK0)+029h)
   325  0361  118A  2335  118A   	fcall	clear_ram
   326                           ; Initialize objects allocated to BANK0
   327                           	global __pidataBANK0
   328                           psect cinit,class=CODE,delta=2
   329  0364  118A  2330  118A   	fcall	__pidataBANK0+0		;fetch initializer
   330  0367  00DE               	movwf	__pdataBANK0+0&07fh		
   331                           psect cinit,class=CODE,delta=2
   332                           global end_of_initialization
   333                           
   334                           ;End of C runtime variable initialization code
   335                           
   336  0368                     end_of_initialization:
   337  0368  0183               clrf status
   338  0369  118A  2CEE         ljmp _main	;jump to C main() function
   339                           psect	cstackCOMMON,class=COMMON,space=1
   340                           global __pcstackCOMMON
   341  0070                     __pcstackCOMMON:
   342                           	global	?_lcd_putch
   343  0070                     ?_lcd_putch:	; 0 bytes @ 0x0
   344                           	global	?_lcd_puts
   345  0070                     ?_lcd_puts:	; 0 bytes @ 0x0
   346                           	global	?_lcd_clear
   347  0070                     ?_lcd_clear:	; 0 bytes @ 0x0
   348                           	global	?_lcd_goto
   349  0070                     ?_lcd_goto:	; 0 bytes @ 0x0
   350                           	global	?_lcd_init
   351  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   352                           	global	?_onewire_init
   353  0070                     ?_onewire_init:	; 0 bytes @ 0x0
   354                           	global	??_onewire_init
   355  0070                     ??_onewire_init:	; 0 bytes @ 0x0
   356                           	global	?_pause
   357  0070                     ?_pause:	; 0 bytes @ 0x0
   358                           	global	?_RefreshDisplay
   359  0070                     ?_RefreshDisplay:	; 0 bytes @ 0x0
   360                           	global	?_ReceivePage
   361  0070                     ?_ReceivePage:	; 0 bytes @ 0x0
   362                           	global	?_RecieveSensorData
   363  0070                     ?_RecieveSensorData:	; 0 bytes @ 0x0
   364                           	global	?_main
   365  0070                     ?_main:	; 0 bytes @ 0x0
   366                           	global	?_lcd_write
   367  0070                     ?_lcd_write:	; 0 bytes @ 0x0
   368                           	global	?_msecbase
   369  0070                     ?_msecbase:	; 0 bytes @ 0x0
   370                           	global	??_msecbase
   371  0070                     ??_msecbase:	; 0 bytes @ 0x0
   372                           	global	??_onewire_read
   373  0070                     ??_onewire_read:	; 0 bytes @ 0x0
   374                           	global	?_onewire_listen
   375  0070                     ?_onewire_listen:	; 1 bytes @ 0x0
   376                           	global	?_onewire_read
   377  0070                     ?_onewire_read:	; 1 bytes @ 0x0
   378                           	global	?___bmul
   379  0070                     ?___bmul:	; 1 bytes @ 0x0
   380                           	global	?___awdiv
   381  0070                     ?___awdiv:	; 2 bytes @ 0x0
   382                           	global	___bmul@multiplicand
   383  0070                     ___bmul@multiplicand:	; 1 bytes @ 0x0
   384                           	global	pause@usvalue
   385  0070                     pause@usvalue:	; 2 bytes @ 0x0
   386                           	global	___awdiv@divisor
   387  0070                     ___awdiv@divisor:	; 2 bytes @ 0x0
   388  0070                     	ds	1
   389                           	global	??___bmul
   390  0071                     ??___bmul:	; 0 bytes @ 0x1
   391  0071                     	ds	1
   392                           	global	??_pause
   393  0072                     ??_pause:	; 0 bytes @ 0x2
   394                           	global	onewire_read@databit
   395  0072                     onewire_read@databit:	; 1 bytes @ 0x2
   396                           	global	___bmul@product
   397  0072                     ___bmul@product:	; 1 bytes @ 0x2
   398                           	global	pause@x
   399  0072                     pause@x:	; 2 bytes @ 0x2
   400                           	global	___awdiv@dividend
   401  0072                     ___awdiv@dividend:	; 2 bytes @ 0x2
   402  0072                     	ds	1
   403                           	global	___bmul@multiplier
   404  0073                     ___bmul@multiplier:	; 1 bytes @ 0x3
   405                           	global	onewire_read@count
   406  0073                     onewire_read@count:	; 2 bytes @ 0x3
   407  0073                     	ds	1
   408                           	global	??_lcd_write
   409  0074                     ??_lcd_write:	; 0 bytes @ 0x4
   410                           	global	??___awdiv
   411  0074                     ??___awdiv:	; 0 bytes @ 0x4
   412  0074                     	ds	1
   413                           	global	lcd_write@c
   414  0075                     lcd_write@c:	; 1 bytes @ 0x5
   415                           	global	onewire_read@data
   416  0075                     onewire_read@data:	; 1 bytes @ 0x5
   417                           	global	___awdiv@counter
   418  0075                     ___awdiv@counter:	; 1 bytes @ 0x5
   419  0075                     	ds	1
   420                           	global	??_lcd_putch
   421  0076                     ??_lcd_putch:	; 0 bytes @ 0x6
   422                           	global	??_lcd_puts
   423  0076                     ??_lcd_puts:	; 0 bytes @ 0x6
   424                           	global	??_lcd_clear
   425  0076                     ??_lcd_clear:	; 0 bytes @ 0x6
   426                           	global	??_lcd_goto
   427  0076                     ??_lcd_goto:	; 0 bytes @ 0x6
   428                           	global	??_onewire_listen
   429  0076                     ??_onewire_listen:	; 0 bytes @ 0x6
   430                           	global	??_lcd_init
   431  0076                     ??_lcd_init:	; 0 bytes @ 0x6
   432                           	global	lcd_putch@c
   433  0076                     lcd_putch@c:	; 1 bytes @ 0x6
   434                           	global	lcd_goto@pos
   435  0076                     lcd_goto@pos:	; 1 bytes @ 0x6
   436                           	global	___awdiv@sign
   437  0076                     ___awdiv@sign:	; 1 bytes @ 0x6
   438  0076                     	ds	1
   439                           	global	lcd_puts@s
   440  0077                     lcd_puts@s:	; 1 bytes @ 0x7
   441                           	global	lcd_init@init_value
   442  0077                     lcd_init@init_value:	; 1 bytes @ 0x7
   443                           	global	onewire_listen@TxAddress
   444  0077                     onewire_listen@TxAddress:	; 1 bytes @ 0x7
   445                           	global	___awdiv@quotient
   446  0077                     ___awdiv@quotient:	; 2 bytes @ 0x7
   447  0077                     	ds	1
   448                           	global	onewire_listen@address
   449  0078                     onewire_listen@address:	; 1 bytes @ 0x8
   450  0078                     	ds	1
   451                           	global	?___awmod
   452  0079                     ?___awmod:	; 2 bytes @ 0x9
   453                           	global	onewire_listen@message_recieved
   454  0079                     onewire_listen@message_recieved:	; 2 bytes @ 0x9
   455                           	global	___awmod@divisor
   456  0079                     ___awmod@divisor:	; 2 bytes @ 0x9
   457  0079                     	ds	2
   458                           	global	onewire_listen@RxAddress
   459  007B                     onewire_listen@RxAddress:	; 1 bytes @ 0xB
   460                           	global	___awmod@dividend
   461  007B                     ___awmod@dividend:	; 2 bytes @ 0xB
   462  007B                     	ds	1
   463                           	global	onewire_listen@Payload
   464  007C                     onewire_listen@Payload:	; 1 bytes @ 0xC
   465  007C                     	ds	1
   466                           	global	??___awmod
   467  007D                     ??___awmod:	; 0 bytes @ 0xD
   468  007D                     	ds	1
   469                           	global	??_DisplayData
   470  007E                     ??_DisplayData:	; 0 bytes @ 0xE
   471                           psect	cstackBANK0,class=BANK0,space=1
   472                           global __pcstackBANK0
   473  0049                     __pcstackBANK0:
   474                           	global	___awmod@counter
   475  0049                     ___awmod@counter:	; 1 bytes @ 0x0
   476  0049                     	ds	1
   477                           	global	___awmod@sign
   478  004A                     ___awmod@sign:	; 1 bytes @ 0x1
   479  004A                     	ds	1
   480                           	global	?_DisplayData
   481  004B                     ?_DisplayData:	; 0 bytes @ 0x2
   482                           	global	DisplayData@data
   483  004B                     DisplayData@data:	; 2 bytes @ 0x2
   484  004B                     	ds	2
   485                           	global	??_RefreshDisplay
   486  004D                     ??_RefreshDisplay:	; 0 bytes @ 0x4
   487  004D                     	ds	1
   488                           	global	??_ReceivePage
   489  004E                     ??_ReceivePage:	; 0 bytes @ 0x5
   490                           	global	??_RecieveSensorData
   491  004E                     ??_RecieveSensorData:	; 0 bytes @ 0x5
   492  004E                     	ds	1
   493                           	global	RecieveSensorData@Temp1H
   494  004F                     RecieveSensorData@Temp1H:	; 1 bytes @ 0x6
   495  004F                     	ds	1
   496                           	global	RecieveSensorData@Temp1L
   497  0050                     RecieveSensorData@Temp1L:	; 1 bytes @ 0x7
   498  0050                     	ds	1
   499                           	global	RecieveSensorData@Temp2H
   500  0051                     RecieveSensorData@Temp2H:	; 1 bytes @ 0x8
   501  0051                     	ds	1
   502                           	global	RecieveSensorData@Temp2L
   503  0052                     RecieveSensorData@Temp2L:	; 1 bytes @ 0x9
   504  0052                     	ds	1
   505                           	global	RecieveSensorData@Temp3H
   506  0053                     RecieveSensorData@Temp3H:	; 1 bytes @ 0xA
   507  0053                     	ds	1
   508                           	global	RecieveSensorData@Temp3L
   509  0054                     RecieveSensorData@Temp3L:	; 1 bytes @ 0xB
   510  0054                     	ds	1
   511                           	global	RecieveSensorData@Temp4H
   512  0055                     RecieveSensorData@Temp4H:	; 1 bytes @ 0xC
   513  0055                     	ds	1
   514                           	global	RecieveSensorData@Temp4L
   515  0056                     RecieveSensorData@Temp4L:	; 1 bytes @ 0xD
   516  0056                     	ds	1
   517                           	global	RecieveSensorData@HumidH
   518  0057                     RecieveSensorData@HumidH:	; 1 bytes @ 0xE
   519  0057                     	ds	1
   520                           	global	RecieveSensorData@HumidL
   521  0058                     RecieveSensorData@HumidL:	; 1 bytes @ 0xF
   522  0058                     	ds	1
   523                           	global	RecieveSensorData@ControllerID
   524  0059                     RecieveSensorData@ControllerID:	; 1 bytes @ 0x10
   525  0059                     	ds	1
   526                           	global	??_main
   527  005A                     ??_main:	; 0 bytes @ 0x11
   528  005A                     	ds	3
   529                           	global	main@input
   530  005D                     main@input:	; 1 bytes @ 0x14
   531  005D                     	ds	1
   532 ;;Data sizes: Strings 80, constant 0, data 1, bss 41, persistent 0 stack 0
   533 ;;Auto spaces:   Size  Autos    Used
   534 ;; COMMON          14     14      14
   535 ;; BANK0           80     21      63
   536 ;; BANK1           80      0       0
   537 ;; BANK2           80      0       0
   538                           
   539 ;;
   540 ;; Pointer list with targets:
   541                           
   542 ;; ?___awdiv	int  size(1) Largest target is 0
   543 ;;
   544 ;; ?___awmod	int  size(1) Largest target is 0
   545 ;;
   546 ;; lcd_puts@s	PTR const unsigned char  size(1) Largest target is 16
   547 ;;		 -> STR_9(CODE[16]), STR_8(CODE[16]), STR_7(CODE[10]), STR_6(CODE[7]), 
   548 ;;		 -> STR_5(CODE[6]), STR_4(CODE[7]), STR_3(CODE[6]), STR_2(CODE[12]), 
   549 ;;		 -> STR_1(CODE[2]), 
   550 ;;
   551                           
   552                           
   553 ;;
   554 ;; Critical Paths under _main in COMMON
   555 ;;
   556 ;;   _lcd_init->_lcd_write
   557 ;;   _DisplayData->___awmod
   558 ;;   _lcd_goto->_lcd_write
   559 ;;   _lcd_clear->_lcd_write
   560 ;;   _lcd_puts->_lcd_write
   561 ;;   _lcd_putch->_lcd_write
   562 ;;   _lcd_write->_pause
   563 ;;   _onewire_listen->_onewire_read
   564 ;;   ___awmod->___awdiv
   565 ;;
   566 ;; Critical Paths under _main in BANK0
   567 ;;
   568 ;;   _main->_RecieveSensorData
   569 ;;   _RecieveSensorData->_RefreshDisplay
   570 ;;   _ReceivePage->_RefreshDisplay
   571 ;;   _RefreshDisplay->_DisplayData
   572 ;;   _DisplayData->___awmod
   573 ;;
   574 ;; Critical Paths under _main in BANK1
   575 ;;
   576 ;;   None.
   577 ;;
   578 ;; Critical Paths under _main in BANK2
   579 ;;
   580 ;;   None.
   581                           
   582 ;;
   583 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   584 ;;
   585                           
   586 ;;
   587 ;;Call Graph Tables:
   588 ;;
   589 ;; ---------------------------------------------------------------------------------
   590 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   591 ;; ---------------------------------------------------------------------------------
   592 ;; (0) _main                                                 4     4      0    4841
   593 ;;                                             17 BANK0      4     4      0
   594 ;;                           _lcd_init
   595 ;;                       _onewire_init
   596 ;;                          _lcd_clear
   597 ;;                           _lcd_goto
   598 ;;                           _lcd_puts
   599 ;;                     _onewire_listen
   600 ;;                  _RecieveSensorData
   601 ;;                        _ReceivePage
   602 ;; ---------------------------------------------------------------------------------
   603 ;; (1) _RecieveSensorData                                   12    12      0    2136
   604 ;;                                              5 BANK0     12    12      0
   605 ;;                     _onewire_listen
   606 ;;                             ___bmul
   607 ;;                     _RefreshDisplay
   608 ;; ---------------------------------------------------------------------------------
   609 ;; (1) _ReceivePage                                          1     1      0    1727
   610 ;;                                              5 BANK0      1     1      0
   611 ;;                     _onewire_listen
   612 ;;                     _RefreshDisplay
   613 ;; ---------------------------------------------------------------------------------
   614 ;; (2) _RefreshDisplay                                       1     1      0    1472
   615 ;;                                              4 BANK0      1     1      0
   616 ;;                          _lcd_clear
   617 ;;                           _lcd_goto
   618 ;;                           _lcd_puts
   619 ;;                          _lcd_putch
   620 ;;                             ___bmul
   621 ;;                        _DisplayData
   622 ;; ---------------------------------------------------------------------------------
   623 ;; (1) _lcd_init                                             2     2      0     295
   624 ;;                                              6 COMMON     2     2      0
   625 ;;                              _pause
   626 ;;                          _lcd_write
   627 ;;                          _lcd_clear
   628 ;; ---------------------------------------------------------------------------------
   629 ;; (3) _DisplayData                                          2     0      2     909
   630 ;;                                              2 BANK0      2     0      2
   631 ;;                            ___awdiv
   632 ;;                            ___awmod
   633 ;;                          _lcd_putch
   634 ;;                           _lcd_puts
   635 ;;                             ___bmul (ARG)
   636 ;; ---------------------------------------------------------------------------------
   637 ;; (3) _lcd_goto                                             1     1      0     112
   638 ;;                                              6 COMMON     1     1      0
   639 ;;                          _lcd_write
   640 ;; ---------------------------------------------------------------------------------
   641 ;; (3) _lcd_clear                                            0     0      0     136
   642 ;;                          _lcd_write
   643 ;;                              _pause
   644 ;; ---------------------------------------------------------------------------------
   645 ;; (4) _lcd_puts                                             2     2      0     135
   646 ;;                                              6 COMMON     2     2      0
   647 ;;                          _lcd_write
   648 ;; ---------------------------------------------------------------------------------
   649 ;; (4) _lcd_putch                                            1     1      0     112
   650 ;;                                              6 COMMON     1     1      0
   651 ;;                          _lcd_write
   652 ;; ---------------------------------------------------------------------------------
   653 ;; (5) _lcd_write                                            2     2      0      90
   654 ;;                                              4 COMMON     2     2      0
   655 ;;                              _pause
   656 ;; ---------------------------------------------------------------------------------
   657 ;; (2) _onewire_listen                                       7     7      0     255
   658 ;;                                              6 COMMON     7     7      0
   659 ;;                       _onewire_read
   660 ;; ---------------------------------------------------------------------------------
   661 ;; (3) _onewire_read                                         6     6      0     162
   662 ;;                                              0 COMMON     6     6      0
   663 ;; ---------------------------------------------------------------------------------
   664 ;; (6) _pause                                                4     2      2      46
   665 ;;                                              0 COMMON     4     2      2
   666 ;;                           _msecbase
   667 ;; ---------------------------------------------------------------------------------
   668 ;; (4) ___awmod                                              7     3      4     296
   669 ;;                                              9 COMMON     5     1      4
   670 ;;                                              0 BANK0      2     2      0
   671 ;;                            ___awdiv (ARG)
   672 ;; ---------------------------------------------------------------------------------
   673 ;; (4) ___awdiv                                              9     5      4     300
   674 ;;                                              0 COMMON     9     5      4
   675 ;; ---------------------------------------------------------------------------------
   676 ;; (3) ___bmul                                               4     3      1      68
   677 ;;                                              0 COMMON     4     3      1
   678 ;; ---------------------------------------------------------------------------------
   679 ;; (7) _msecbase                                             0     0      0       0
   680 ;; ---------------------------------------------------------------------------------
   681 ;; (1) _onewire_init                                         0     0      0       0
   682 ;; ---------------------------------------------------------------------------------
   683 ;; Estimated maximum stack depth 7
   684 ;; ---------------------------------------------------------------------------------
   685                           
   686 ;; Call Graph Graphs:
   687                           
   688 ;; _main (ROOT)
   689 ;;   _lcd_init
   690 ;;     _pause
   691 ;;       _msecbase
   692 ;;     _lcd_write
   693 ;;       _pause
   694 ;;         _msecbase
   695 ;;     _lcd_clear
   696 ;;       _lcd_write
   697 ;;         _pause
   698 ;;           _msecbase
   699 ;;       _pause
   700 ;;         _msecbase
   701 ;;   _onewire_init
   702 ;;   _lcd_clear
   703 ;;     _lcd_write
   704 ;;       _pause
   705 ;;         _msecbase
   706 ;;     _pause
   707 ;;       _msecbase
   708 ;;   _lcd_goto
   709 ;;     _lcd_write
   710 ;;       _pause
   711 ;;         _msecbase
   712 ;;   _lcd_puts
   713 ;;     _lcd_write
   714 ;;       _pause
   715 ;;         _msecbase
   716 ;;   _onewire_listen
   717 ;;     _onewire_read
   718 ;;   _RecieveSensorData
   719 ;;     _onewire_listen
   720 ;;       _onewire_read
   721 ;;     ___bmul
   722 ;;     _RefreshDisplay
   723 ;;       _lcd_clear
   724 ;;         _lcd_write
   725 ;;           _pause
   726 ;;             _msecbase
   727 ;;         _pause
   728 ;;           _msecbase
   729 ;;       _lcd_goto
   730 ;;         _lcd_write
   731 ;;           _pause
   732 ;;             _msecbase
   733 ;;       _lcd_puts
   734 ;;         _lcd_write
   735 ;;           _pause
   736 ;;             _msecbase
   737 ;;       _lcd_putch
   738 ;;         _lcd_write
   739 ;;           _pause
   740 ;;             _msecbase
   741 ;;       ___bmul
   742 ;;       _DisplayData
   743 ;;         ___awdiv
   744 ;;         ___awmod
   745 ;;           ___awdiv (ARG)
   746 ;;         _lcd_putch
   747 ;;           _lcd_write
   748 ;;             _pause
   749 ;;               _msecbase
   750 ;;         _lcd_puts
   751 ;;           _lcd_write
   752 ;;             _pause
   753 ;;               _msecbase
   754 ;;         ___bmul (ARG)
   755 ;;   _ReceivePage
   756 ;;     _onewire_listen
   757 ;;       _onewire_read
   758 ;;     _RefreshDisplay
   759 ;;       _lcd_clear
   760 ;;         _lcd_write
   761 ;;           _pause
   762 ;;             _msecbase
   763 ;;         _pause
   764 ;;           _msecbase
   765 ;;       _lcd_goto
   766 ;;         _lcd_write
   767 ;;           _pause
   768 ;;             _msecbase
   769 ;;       _lcd_puts
   770 ;;         _lcd_write
   771 ;;           _pause
   772 ;;             _msecbase
   773 ;;       _lcd_putch
   774 ;;         _lcd_write
   775 ;;           _pause
   776 ;;             _msecbase
   777 ;;       ___bmul
   778 ;;       _DisplayData
   779 ;;         ___awdiv
   780 ;;         ___awmod
   781 ;;           ___awdiv (ARG)
   782 ;;         _lcd_putch
   783 ;;           _lcd_write
   784 ;;             _pause
   785 ;;               _msecbase
   786 ;;         _lcd_puts
   787 ;;           _lcd_write
   788 ;;             _pause
   789 ;;               _msecbase
   790 ;;         ___bmul (ARG)
   791 ;;
   792                           
   793 ;; Address spaces:
   794                           
   795 ;;Name               Size   Autos  Total    Cost      Usage
   796 ;;SFR3                 0      0       0       4        0.0%
   797 ;;BITSFR3              0      0       0       4        0.0%
   798 ;;BANK2               50      0       0       7        0.0%
   799 ;;BITBANK2            50      0       0       6        0.0%
   800 ;;SFR2                 0      0       0       5        0.0%
   801 ;;BITSFR2              0      0       0       5        0.0%
   802 ;;SFR1                 0      0       0       2        0.0%
   803 ;;BITSFR1              0      0       0       2        0.0%
   804 ;;BANK1               50      0       0       5        0.0%
   805 ;;BITBANK1            50      0       0       4        0.0%
   806 ;;CODE                 0      0       0       0        0.0%
   807 ;;DATA                 0      0      54      10        0.0%
   808 ;;ABS                  0      0      4D       8        0.0%
   809 ;;NULL                 0      0       0       0        0.0%
   810 ;;STACK                0      0       7       2        0.0%
   811 ;;BANK0               50     15      3F       3       78.8%
   812 ;;BITBANK0            50      0       0       9        0.0%
   813 ;;SFR0                 0      0       0       1        0.0%
   814 ;;BITSFR0              0      0       0       1        0.0%
   815 ;;COMMON               E      E       E       1      100.0%
   816 ;;BITCOMMON            E      0       0       0        0.0%
   817 ;;EEDATA             100      0       0       0        0.0%
   818                           
   819                           	global	_main
   820                           psect	maintext,global,class=CODE,delta=2
   821                           global __pmaintext
   822  04EE                     __pmaintext:
   823                           
   824 ;; *************** function _main *****************
   825 ;; Defined at:
   826 ;;		line 110 in file "C:/Users/Dave/MPLABXProjects/CLDC001.X/CLDC001.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;  input           1   20[BANK0 ] unsigned char 
   831 ;; Return value:  Size  Location     Type
   832 ;;		None               void
   833 ;; Registers used:
   834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : 17F/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   840 ;;      Params:         0       0       0       0
   841 ;;      Locals:         0       1       0       0
   842 ;;      Temps:          0       3       0       0
   843 ;;      Totals:         0       4       0       0
   844 ;;Total ram usage:        4 bytes
   845 ;; Hardware stack levels required when called:    7
   846 ;; This function calls:
   847 ;;		_lcd_init
   848 ;;		_onewire_init
   849 ;;		_lcd_clear
   850 ;;		_lcd_goto
   851 ;;		_lcd_puts
   852 ;;		_onewire_listen
   853 ;;		_RecieveSensorData
   854 ;;		_ReceivePage
   855 ;; This function is called by:
   856 ;;		Startup code after reset
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           psect	maintext
   860                           	file	"C:/Users/Dave/MPLABXProjects/CLDC001.X/CLDC001.c"
   861                           	line	110
   862                           	global	__size_of_main
   863  005C                     	__size_of_main	equ	__end_of_main-_main
   864                           	
   865  04EE                     _main:	
   866                           	opt	stack 1
   867                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   868                           	line	113
   869                           	
   870  04EE                     l7645:	
   871                           ;CLDC001.c: 111: unsigned char input;
   872                           ;CLDC001.c: 113: ANSEL = 0;
   873  04EE  1283               	bcf	status, 5	;RP0=0, select bank2
   874  04EF  1703               	bsf	status, 6	;RP1=1, select bank2
   875  04F0  019E               	clrf	(286)^0100h	;volatile
   876                           	line	114
   877                           ;CLDC001.c: 114: ANSELH = 0;
   878  04F1  019F               	clrf	(287)^0100h	;volatile
   879                           	line	115
   880                           ;CLDC001.c: 115: CM1CON0 = 0;
   881  04F2  0199               	clrf	(281)^0100h	;volatile
   882                           	line	116
   883                           ;CLDC001.c: 116: CM2CON0 = 0;
   884  04F3  019A               	clrf	(282)^0100h	;volatile
   885                           	line	117
   886                           	
   887  04F4                     l7647:	
   888                           ;CLDC001.c: 117: OSCCON = 0b01110110;
   889  04F4  3076               	movlw	(076h)
   890  04F5  1683               	bsf	status, 5	;RP0=1, select bank1
   891  04F6  1303               	bcf	status, 6	;RP1=0, select bank1
   892  04F7  008F               	movwf	(143)^080h	;volatile
   893                           	line	119
   894                           	
   895  04F8                     l7649:	
   896                           ;CLDC001.c: 119: TRISA = 0;
   897  04F8  0185               	clrf	(133)^080h	;volatile
   898                           	line	120
   899                           	
   900  04F9                     l7651:	
   901                           ;CLDC001.c: 120: TRISB = 0;
   902  04F9  0186               	clrf	(134)^080h	;volatile
   903                           	line	121
   904                           	
   905  04FA                     l7653:	
   906                           ;CLDC001.c: 121: TRISC = 0;
   907  04FA  0187               	clrf	(135)^080h	;volatile
   908                           	line	122
   909                           	
   910  04FB                     l7655:	
   911                           ;CLDC001.c: 122: PORTB = 0;
   912  04FB  1283               	bcf	status, 5	;RP0=0, select bank0
   913  04FC  1303               	bcf	status, 6	;RP1=0, select bank0
   914  04FD  0186               	clrf	(6)	;volatile
   915                           	line	124
   916                           	
   917  04FE                     l7657:	
   918                           ;CLDC001.c: 124: lcd_init();
   919  04FE  118A  2443  118A   	fcall	_lcd_init
   920                           	line	125
   921                           	
   922  0501                     l7659:	
   923                           ;CLDC001.c: 125: onewire_init();
   924  0501  118A  2331  118A   	fcall	_onewire_init
   925                           	line	128
   926                           	
   927  0504                     l7661:	
   928                           ;CLDC001.c: 128: lcd_clear();
   929  0504  118A  237A  118A   	fcall	_lcd_clear
   930                           	line	129
   931                           	
   932  0507                     l7663:	
   933                           ;CLDC001.c: 129: lcd_goto(0);
   934  0507  3000               	movlw	(0)
   935  0508  118A  2346  118A   	fcall	_lcd_goto
   936                           	line	130
   937                           	
   938  050B                     l7665:	
   939                           ;CLDC001.c: 130: lcd_puts("    Cosy Lizard");
   940  050B  3011               	movlw	((STR_8-__stringbase))&0ffh
   941  050C  118A  23D7  118A   	fcall	_lcd_puts
   942                           	line	131
   943                           	
   944  050F                     l7667:	
   945                           ;CLDC001.c: 131: lcd_goto(0x40);
   946  050F  3040               	movlw	(040h)
   947  0510  118A  2346  118A   	fcall	_lcd_goto
   948                           	line	132
   949                           	
   950  0513                     l7669:	
   951                           ;CLDC001.c: 132: lcd_puts("Initialising...");
   952  0513  3001               	movlw	((STR_9-__stringbase))&0ffh
   953  0514  118A  23D7  118A   	fcall	_lcd_puts
   954                           	line	134
   955                           	
   956  0517                     l7671:	
   957                           ;CLDC001.c: 134: _delay((unsigned long)((1000)*(8000000/4000.0)));
   958                           	opt asmopt_off
   959  0517  300B               movlw  11
   960  0518  1283               	bcf	status, 5	;RP0=0, select bank0
   961  0519  1303               	bcf	status, 6	;RP1=0, select bank0
   962  051A  00DC               movwf	((??_main+0)+0+2),f
   963  051B  3026               movlw	38
   964  051C  00DB               movwf	((??_main+0)+0+1),f
   965  051D  3066               	movlw	102
   966  051E  00DA               movwf	((??_main+0)+0),f
   967  051F                     u2907:
   968  051F  0BDA               	decfsz	((??_main+0)+0),f
   969  0520  2D1F               	goto	u2907
   970  0521  0BDB               	decfsz	((??_main+0)+0+1),f
   971  0522  2D1F               	goto	u2907
   972  0523  0BDC               	decfsz	((??_main+0)+0+2),f
   973  0524  2D1F               	goto	u2907
   974  0525  2D26               	nop2
   975                           opt asmopt_on
   976                           
   977  0526  2D27               	goto	l7673
   978                           	line	135
   979                           ;CLDC001.c: 135: while (1)
   980                           	
   981  0527                     l1464:	
   982                           	line	137
   983                           	
   984  0527                     l7673:	
   985                           ;CLDC001.c: 136: {
   986                           ;CLDC001.c: 137: input=onewire_listen(0xF0);
   987  0527  30F0               	movlw	(0F0h)
   988  0528  118A  23F5  118A   	fcall	_onewire_listen
   989  052B  1283               	bcf	status, 5	;RP0=0, select bank0
   990  052C  1303               	bcf	status, 6	;RP1=0, select bank0
   991  052D  00DA               	movwf	(??_main+0)+0
   992  052E  085A               	movf	(??_main+0)+0,w
   993  052F  00DD               	movwf	(main@input)
   994                           	line	139
   995                           	
   996  0530                     l7675:	
   997                           ;CLDC001.c: 139: if (input == 0x01)
   998  0530  085D               	movf	(main@input),w
   999  0531  3A01               	xorlw	01h
  1000  0532  1D03               	skipz
  1001  0533  2D35               	goto	u2881
  1002  0534  2D36               	goto	u2880
  1003  0535                     u2881:
  1004  0535  2D3A               	goto	l7679
  1005  0536                     u2880:
  1006                           	line	140
  1007                           	
  1008  0536                     l7677:	
  1009                           ;CLDC001.c: 140: RecieveSensorData();
  1010  0536  118A  273B  118A   	fcall	_RecieveSensorData
  1011  0539  2D3A               	goto	l7679
  1012                           	
  1013  053A                     l1465:	
  1014                           	line	141
  1015                           	
  1016  053A                     l7679:	
  1017                           ;CLDC001.c: 141: if (input == 0x02)
  1018  053A  1283               	bcf	status, 5	;RP0=0, select bank0
  1019  053B  1303               	bcf	status, 6	;RP1=0, select bank0
  1020  053C  085D               	movf	(main@input),w
  1021  053D  3A02               	xorlw	02h
  1022  053E  1D03               	skipz
  1023  053F  2D41               	goto	u2891
  1024  0540  2D42               	goto	u2890
  1025  0541                     u2891:
  1026  0541  2D27               	goto	l7673
  1027  0542                     u2890:
  1028                           	line	142
  1029                           	
  1030  0542                     l7681:	
  1031                           ;CLDC001.c: 142: ReceivePage();
  1032  0542  118A  2350  118A   	fcall	_ReceivePage
  1033  0545  2D27               	goto	l7673
  1034                           	
  1035  0546                     l1466:	
  1036  0546  2D27               	goto	l7673
  1037                           	line	143
  1038                           	
  1039  0547                     l1467:	
  1040                           	line	135
  1041  0547  2D27               	goto	l7673
  1042                           	
  1043  0548                     l1468:	
  1044                           	line	144
  1045                           	
  1046  0548                     l1469:	
  1047                           	global	start
  1048  0548  118A  2800         	ljmp	start
  1049                           	opt stack 0
  1050                           GLOBAL	__end_of_main
  1051  054A                     	__end_of_main:
  1052 ;; =============== function _main ends ============
  1053                           
  1054                           	signat	_main,88
  1055                           	global	_RecieveSensorData
  1056                           psect	text450,local,class=CODE,delta=2
  1057                           global __ptext450
  1058  073B                     __ptext450:
  1059                           
  1060 ;; *************** function _RecieveSensorData *****************
  1061 ;; Defined at:
  1062 ;;		line 77 in file "C:/Users/Dave/MPLABXProjects/CLDC001.X/CLDC001.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;		None
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  ControllerID    1   16[BANK0 ] unsigned char 
  1067 ;;  HumidL          1   15[BANK0 ] unsigned char 
  1068 ;;  HumidH          1   14[BANK0 ] unsigned char 
  1069 ;;  Temp4L          1   13[BANK0 ] unsigned char 
  1070 ;;  Temp4H          1   12[BANK0 ] unsigned char 
  1071 ;;  Temp3L          1   11[BANK0 ] unsigned char 
  1072 ;;  Temp3H          1   10[BANK0 ] unsigned char 
  1073 ;;  Temp2L          1    9[BANK0 ] unsigned char 
  1074 ;;  Temp2H          1    8[BANK0 ] unsigned char 
  1075 ;;  Temp1L          1    7[BANK0 ] unsigned char 
  1076 ;;  Temp1H          1    6[BANK0 ] unsigned char 
  1077 ;; Return value:  Size  Location     Type
  1078 ;;		None               void
  1079 ;; Registers used:
  1080 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1086 ;;      Params:         0       0       0       0
  1087 ;;      Locals:         0      11       0       0
  1088 ;;      Temps:          0       1       0       0
  1089 ;;      Totals:         0      12       0       0
  1090 ;;Total ram usage:       12 bytes
  1091 ;; Hardware stack levels used:    1
  1092 ;; Hardware stack levels required when called:    6
  1093 ;; This function calls:
  1094 ;;		_onewire_listen
  1095 ;;		___bmul
  1096 ;;		_RefreshDisplay
  1097 ;; This function is called by:
  1098 ;;		_main
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           psect	text450
  1102                           	file	"C:/Users/Dave/MPLABXProjects/CLDC001.X/CLDC001.c"
  1103                           	line	77
  1104                           	global	__size_of_RecieveSensorData
  1105  00C5                     	__size_of_RecieveSensorData	equ	__end_of_RecieveSensorData-_RecieveSensorData
  1106                           	
  1107  073B                     _RecieveSensorData:	
  1108                           	opt	stack 1
  1109                           ; Regs used in _RecieveSensorData: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1110                           	line	79
  1111                           	
  1112  073B                     l7631:	
  1113                           ;CLDC001.c: 79: unsigned char ControllerID = onewire_listen(0xF0);
  1114  073B  30F0               	movlw	(0F0h)
  1115  073C  118A  23F5  118A   	fcall	_onewire_listen
  1116  073F  1283               	bcf	status, 5	;RP0=0, select bank0
  1117  0740  1303               	bcf	status, 6	;RP1=0, select bank0
  1118  0741  00CE               	movwf	(??_RecieveSensorData+0)+0
  1119  0742  084E               	movf	(??_RecieveSensorData+0)+0,w
  1120  0743  00D9               	movwf	(RecieveSensorData@ControllerID)
  1121                           	line	80
  1122                           ;CLDC001.c: 80: unsigned char Temp1H = onewire_listen(0xF0);
  1123  0744  30F0               	movlw	(0F0h)
  1124  0745  118A  23F5  118A   	fcall	_onewire_listen
  1125  0748  1283               	bcf	status, 5	;RP0=0, select bank0
  1126  0749  1303               	bcf	status, 6	;RP1=0, select bank0
  1127  074A  00CE               	movwf	(??_RecieveSensorData+0)+0
  1128  074B  084E               	movf	(??_RecieveSensorData+0)+0,w
  1129  074C  00CF               	movwf	(RecieveSensorData@Temp1H)
  1130                           	line	81
  1131                           ;CLDC001.c: 81: unsigned char Temp1L = onewire_listen(0xF0);
  1132  074D  30F0               	movlw	(0F0h)
  1133  074E  118A  23F5  118A   	fcall	_onewire_listen
  1134  0751  1283               	bcf	status, 5	;RP0=0, select bank0
  1135  0752  1303               	bcf	status, 6	;RP1=0, select bank0
  1136  0753  00CE               	movwf	(??_RecieveSensorData+0)+0
  1137  0754  084E               	movf	(??_RecieveSensorData+0)+0,w
  1138  0755  00D0               	movwf	(RecieveSensorData@Temp1L)
  1139                           	line	82
  1140                           ;CLDC001.c: 82: unsigned char Temp2H = onewire_listen(0xF0);
  1141  0756  30F0               	movlw	(0F0h)
  1142  0757  118A  23F5  118A   	fcall	_onewire_listen
  1143  075A  1283               	bcf	status, 5	;RP0=0, select bank0
  1144  075B  1303               	bcf	status, 6	;RP1=0, select bank0
  1145  075C  00CE               	movwf	(??_RecieveSensorData+0)+0
  1146  075D  084E               	movf	(??_RecieveSensorData+0)+0,w
  1147  075E  00D1               	movwf	(RecieveSensorData@Temp2H)
  1148                           	line	83
  1149                           ;CLDC001.c: 83: unsigned char Temp2L = onewire_listen(0xF0);
  1150  075F  30F0               	movlw	(0F0h)
  1151  0760  118A  23F5  118A   	fcall	_onewire_listen
  1152  0763  1283               	bcf	status, 5	;RP0=0, select bank0
  1153  0764  1303               	bcf	status, 6	;RP1=0, select bank0
  1154  0765  00CE               	movwf	(??_RecieveSensorData+0)+0
  1155  0766  084E               	movf	(??_RecieveSensorData+0)+0,w
  1156  0767  00D2               	movwf	(RecieveSensorData@Temp2L)
  1157                           	line	84
  1158                           ;CLDC001.c: 84: unsigned char Temp3H = onewire_listen(0xF0);
  1159  0768  30F0               	movlw	(0F0h)
  1160  0769  118A  23F5  118A   	fcall	_onewire_listen
  1161  076C  1283               	bcf	status, 5	;RP0=0, select bank0
  1162  076D  1303               	bcf	status, 6	;RP1=0, select bank0
  1163  076E  00CE               	movwf	(??_RecieveSensorData+0)+0
  1164  076F  084E               	movf	(??_RecieveSensorData+0)+0,w
  1165  0770  00D3               	movwf	(RecieveSensorData@Temp3H)
  1166                           	line	85
  1167                           ;CLDC001.c: 85: unsigned char Temp3L = onewire_listen(0xF0);
  1168  0771  30F0               	movlw	(0F0h)
  1169  0772  118A  23F5  118A   	fcall	_onewire_listen
  1170  0775  1283               	bcf	status, 5	;RP0=0, select bank0
  1171  0776  1303               	bcf	status, 6	;RP1=0, select bank0
  1172  0777  00CE               	movwf	(??_RecieveSensorData+0)+0
  1173  0778  084E               	movf	(??_RecieveSensorData+0)+0,w
  1174  0779  00D4               	movwf	(RecieveSensorData@Temp3L)
  1175                           	line	86
  1176                           ;CLDC001.c: 86: unsigned char Temp4H = onewire_listen(0xF0);
  1177  077A  30F0               	movlw	(0F0h)
  1178  077B  118A  23F5  118A   	fcall	_onewire_listen
  1179  077E  1283               	bcf	status, 5	;RP0=0, select bank0
  1180  077F  1303               	bcf	status, 6	;RP1=0, select bank0
  1181  0780  00CE               	movwf	(??_RecieveSensorData+0)+0
  1182  0781  084E               	movf	(??_RecieveSensorData+0)+0,w
  1183  0782  00D5               	movwf	(RecieveSensorData@Temp4H)
  1184                           	line	87
  1185                           ;CLDC001.c: 87: unsigned char Temp4L = onewire_listen(0xF0);
  1186  0783  30F0               	movlw	(0F0h)
  1187  0784  118A  23F5  118A   	fcall	_onewire_listen
  1188  0787  1283               	bcf	status, 5	;RP0=0, select bank0
  1189  0788  1303               	bcf	status, 6	;RP1=0, select bank0
  1190  0789  00CE               	movwf	(??_RecieveSensorData+0)+0
  1191  078A  084E               	movf	(??_RecieveSensorData+0)+0,w
  1192  078B  00D6               	movwf	(RecieveSensorData@Temp4L)
  1193                           	line	88
  1194                           ;CLDC001.c: 88: unsigned char HumidH = onewire_listen(0xF0);
  1195  078C  30F0               	movlw	(0F0h)
  1196  078D  118A  23F5  118A   	fcall	_onewire_listen
  1197  0790  1283               	bcf	status, 5	;RP0=0, select bank0
  1198  0791  1303               	bcf	status, 6	;RP1=0, select bank0
  1199  0792  00CE               	movwf	(??_RecieveSensorData+0)+0
  1200  0793  084E               	movf	(??_RecieveSensorData+0)+0,w
  1201  0794  00D7               	movwf	(RecieveSensorData@HumidH)
  1202                           	line	89
  1203                           ;CLDC001.c: 89: unsigned char HumidL = onewire_listen(0xF0);
  1204  0795  30F0               	movlw	(0F0h)
  1205  0796  118A  23F5  118A   	fcall	_onewire_listen
  1206  0799  1283               	bcf	status, 5	;RP0=0, select bank0
  1207  079A  1303               	bcf	status, 6	;RP1=0, select bank0
  1208  079B  00CE               	movwf	(??_RecieveSensorData+0)+0
  1209  079C  084E               	movf	(??_RecieveSensorData+0)+0,w
  1210  079D  00D8               	movwf	(RecieveSensorData@HumidL)
  1211                           	line	99
  1212                           	
  1213  079E                     l7633:	
  1214                           ;CLDC001.c: 99: DataArray[ControllerID][0] = (Temp1H<<8) + Temp1L;
  1215  079E  300A               	movlw	(0Ah)
  1216  079F  00CE               	movwf	(??_RecieveSensorData+0)+0
  1217  07A0  084E               	movf	(??_RecieveSensorData+0)+0,w
  1218  07A1  00F0               	movwf	(?___bmul)
  1219  07A2  0859               	movf	(RecieveSensorData@ControllerID),w
  1220  07A3  118A  2389  118A   	fcall	___bmul
  1221  07A6  3E20               	addlw	_DataArray&0ffh
  1222  07A7  0084               	movwf	fsr0
  1223  07A8  1283               	bcf	status, 5	;RP0=0, select bank0
  1224  07A9  1303               	bcf	status, 6	;RP1=0, select bank0
  1225  07AA  0850               	movf	(RecieveSensorData@Temp1L),w
  1226  07AB  1383               	bcf	status, 7	;select IRP bank0
  1227  07AC  0080               	movwf	indf
  1228  07AD  0A84               	incf	fsr0,f
  1229  07AE  084F               	movf	(RecieveSensorData@Temp1H),w
  1230  07AF  0080               	movwf	indf
  1231                           	line	100
  1232                           	
  1233  07B0                     l7635:	
  1234                           ;CLDC001.c: 100: DataArray[ControllerID][1] = (Temp2H<<8) + Temp2L;
  1235  07B0  300A               	movlw	(0Ah)
  1236  07B1  00CE               	movwf	(??_RecieveSensorData+0)+0
  1237  07B2  084E               	movf	(??_RecieveSensorData+0)+0,w
  1238  07B3  00F0               	movwf	(?___bmul)
  1239  07B4  0859               	movf	(RecieveSensorData@ControllerID),w
  1240  07B5  118A  2389  118A   	fcall	___bmul
  1241  07B8  3E02               	addlw	02h
  1242  07B9  3E20               	addlw	_DataArray&0ffh
  1243  07BA  0084               	movwf	fsr0
  1244  07BB  1283               	bcf	status, 5	;RP0=0, select bank0
  1245  07BC  1303               	bcf	status, 6	;RP1=0, select bank0
  1246  07BD  0852               	movf	(RecieveSensorData@Temp2L),w
  1247  07BE  1383               	bcf	status, 7	;select IRP bank0
  1248  07BF  0080               	movwf	indf
  1249  07C0  0A84               	incf	fsr0,f
  1250  07C1  0851               	movf	(RecieveSensorData@Temp2H),w
  1251  07C2  0080               	movwf	indf
  1252                           	line	101
  1253                           	
  1254  07C3                     l7637:	
  1255                           ;CLDC001.c: 101: DataArray[ControllerID][2] = (Temp3H<<8) + Temp3L;
  1256  07C3  300A               	movlw	(0Ah)
  1257  07C4  00CE               	movwf	(??_RecieveSensorData+0)+0
  1258  07C5  084E               	movf	(??_RecieveSensorData+0)+0,w
  1259  07C6  00F0               	movwf	(?___bmul)
  1260  07C7  0859               	movf	(RecieveSensorData@ControllerID),w
  1261  07C8  118A  2389  118A   	fcall	___bmul
  1262  07CB  3E04               	addlw	04h
  1263  07CC  3E20               	addlw	_DataArray&0ffh
  1264  07CD  0084               	movwf	fsr0
  1265  07CE  1283               	bcf	status, 5	;RP0=0, select bank0
  1266  07CF  1303               	bcf	status, 6	;RP1=0, select bank0
  1267  07D0  0854               	movf	(RecieveSensorData@Temp3L),w
  1268  07D1  1383               	bcf	status, 7	;select IRP bank0
  1269  07D2  0080               	movwf	indf
  1270  07D3  0A84               	incf	fsr0,f
  1271  07D4  0853               	movf	(RecieveSensorData@Temp3H),w
  1272  07D5  0080               	movwf	indf
  1273                           	line	102
  1274                           	
  1275  07D6                     l7639:	
  1276                           ;CLDC001.c: 102: DataArray[ControllerID][3] = (Temp4H<<8) + Temp4L;
  1277  07D6  300A               	movlw	(0Ah)
  1278  07D7  00CE               	movwf	(??_RecieveSensorData+0)+0
  1279  07D8  084E               	movf	(??_RecieveSensorData+0)+0,w
  1280  07D9  00F0               	movwf	(?___bmul)
  1281  07DA  0859               	movf	(RecieveSensorData@ControllerID),w
  1282  07DB  118A  2389  118A   	fcall	___bmul
  1283  07DE  3E06               	addlw	06h
  1284  07DF  3E20               	addlw	_DataArray&0ffh
  1285  07E0  0084               	movwf	fsr0
  1286  07E1  1283               	bcf	status, 5	;RP0=0, select bank0
  1287  07E2  1303               	bcf	status, 6	;RP1=0, select bank0
  1288  07E3  0856               	movf	(RecieveSensorData@Temp4L),w
  1289  07E4  1383               	bcf	status, 7	;select IRP bank0
  1290  07E5  0080               	movwf	indf
  1291  07E6  0A84               	incf	fsr0,f
  1292  07E7  0855               	movf	(RecieveSensorData@Temp4H),w
  1293  07E8  0080               	movwf	indf
  1294                           	line	103
  1295                           	
  1296  07E9                     l7641:	
  1297                           ;CLDC001.c: 103: DataArray[ControllerID][4] = (HumidH<<8) + HumidL;
  1298  07E9  300A               	movlw	(0Ah)
  1299  07EA  00CE               	movwf	(??_RecieveSensorData+0)+0
  1300  07EB  084E               	movf	(??_RecieveSensorData+0)+0,w
  1301  07EC  00F0               	movwf	(?___bmul)
  1302  07ED  0859               	movf	(RecieveSensorData@ControllerID),w
  1303  07EE  118A  2389  118A   	fcall	___bmul
  1304  07F1  3E08               	addlw	08h
  1305  07F2  3E20               	addlw	_DataArray&0ffh
  1306  07F3  0084               	movwf	fsr0
  1307  07F4  1283               	bcf	status, 5	;RP0=0, select bank0
  1308  07F5  1303               	bcf	status, 6	;RP1=0, select bank0
  1309  07F6  0858               	movf	(RecieveSensorData@HumidL),w
  1310  07F7  1383               	bcf	status, 7	;select IRP bank0
  1311  07F8  0080               	movwf	indf
  1312  07F9  0A84               	incf	fsr0,f
  1313  07FA  0857               	movf	(RecieveSensorData@HumidH),w
  1314  07FB  0080               	movwf	indf
  1315                           	line	105
  1316                           	
  1317  07FC                     l7643:	
  1318                           ;CLDC001.c: 105: RefreshDisplay();
  1319  07FC  118A  2691  118A   	fcall	_RefreshDisplay
  1320                           	line	106
  1321                           	
  1322  07FF                     l1461:	
  1323  07FF  0008               	return
  1324                           	opt stack 0
  1325                           GLOBAL	__end_of_RecieveSensorData
  1326  0800                     	__end_of_RecieveSensorData:
  1327 ;; =============== function _RecieveSensorData ends ============
  1328                           
  1329                           	signat	_RecieveSensorData,88
  1330                           	global	_ReceivePage
  1331                           psect	text451,local,class=CODE,delta=2
  1332                           global __ptext451
  1333  0350                     __ptext451:
  1334                           
  1335 ;; *************** function _ReceivePage *****************
  1336 ;; Defined at:
  1337 ;;		line 69 in file "C:/Users/Dave/MPLABXProjects/CLDC001.X/CLDC001.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;		None
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;		None
  1342 ;; Return value:  Size  Location     Type
  1343 ;;		None               void
  1344 ;; Registers used:
  1345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1351 ;;      Params:         0       0       0       0
  1352 ;;      Locals:         0       0       0       0
  1353 ;;      Temps:          0       1       0       0
  1354 ;;      Totals:         0       1       0       0
  1355 ;;Total ram usage:        1 bytes
  1356 ;; Hardware stack levels used:    1
  1357 ;; Hardware stack levels required when called:    6
  1358 ;; This function calls:
  1359 ;;		_onewire_listen
  1360 ;;		_RefreshDisplay
  1361 ;; This function is called by:
  1362 ;;		_main
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           psect	text451
  1366                           	file	"C:/Users/Dave/MPLABXProjects/CLDC001.X/CLDC001.c"
  1367                           	line	69
  1368                           	global	__size_of_ReceivePage
  1369  000D                     	__size_of_ReceivePage	equ	__end_of_ReceivePage-_ReceivePage
  1370                           	
  1371  0350                     _ReceivePage:	
  1372                           	opt	stack 1
  1373                           ; Regs used in _ReceivePage: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1374                           	line	71
  1375                           	
  1376  0350                     l7627:	
  1377                           ;CLDC001.c: 71: DisplayPage = onewire_listen(0xF0);
  1378  0350  30F0               	movlw	(0F0h)
  1379  0351  118A  23F5  118A   	fcall	_onewire_listen
  1380  0354  1283               	bcf	status, 5	;RP0=0, select bank0
  1381  0355  1303               	bcf	status, 6	;RP1=0, select bank0
  1382  0356  00CE               	movwf	(??_ReceivePage+0)+0
  1383  0357  084E               	movf	(??_ReceivePage+0)+0,w
  1384  0358  00DE               	movwf	(_DisplayPage)
  1385                           	line	73
  1386                           	
  1387  0359                     l7629:	
  1388                           ;CLDC001.c: 73: RefreshDisplay();
  1389  0359  118A  2691  118A   	fcall	_RefreshDisplay
  1390                           	line	74
  1391                           	
  1392  035C                     l1458:	
  1393  035C  0008               	return
  1394                           	opt stack 0
  1395                           GLOBAL	__end_of_ReceivePage
  1396  035D                     	__end_of_ReceivePage:
  1397 ;; =============== function _ReceivePage ends ============
  1398                           
  1399                           	signat	_ReceivePage,88
  1400                           	global	_RefreshDisplay
  1401                           psect	text452,local,class=CODE,delta=2
  1402                           global __ptext452
  1403  0691                     __ptext452:
  1404                           
  1405 ;; *************** function _RefreshDisplay *****************
  1406 ;; Defined at:
  1407 ;;		line 39 in file "C:/Users/Dave/MPLABXProjects/CLDC001.X/CLDC001.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;		None
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;		None
  1412 ;; Return value:  Size  Location     Type
  1413 ;;		None               void
  1414 ;; Registers used:
  1415 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1421 ;;      Params:         0       0       0       0
  1422 ;;      Locals:         0       0       0       0
  1423 ;;      Temps:          0       1       0       0
  1424 ;;      Totals:         0       1       0       0
  1425 ;;Total ram usage:        1 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; Hardware stack levels required when called:    5
  1428 ;; This function calls:
  1429 ;;		_lcd_clear
  1430 ;;		_lcd_goto
  1431 ;;		_lcd_puts
  1432 ;;		_lcd_putch
  1433 ;;		___bmul
  1434 ;;		_DisplayData
  1435 ;; This function is called by:
  1436 ;;		_ReceivePage
  1437 ;;		_RecieveSensorData
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           psect	text452
  1441                           	file	"C:/Users/Dave/MPLABXProjects/CLDC001.X/CLDC001.c"
  1442                           	line	39
  1443                           	global	__size_of_RefreshDisplay
  1444  00AA                     	__size_of_RefreshDisplay	equ	__end_of_RefreshDisplay-_RefreshDisplay
  1445                           	
  1446  0691                     _RefreshDisplay:	
  1447                           	opt	stack 1
  1448                           ; Regs used in _RefreshDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1449                           	line	41
  1450                           	
  1451  0691                     l7603:	
  1452                           ;CLDC001.c: 41: lcd_clear();
  1453  0691  118A  237A  118A   	fcall	_lcd_clear
  1454                           	line	42
  1455                           ;CLDC001.c: 42: lcd_goto(0x0);
  1456  0694  3000               	movlw	(0)
  1457  0695  118A  2346  118A   	fcall	_lcd_goto
  1458                           	line	44
  1459                           	
  1460  0698                     l7605:	
  1461                           ;CLDC001.c: 44: lcd_puts("Controller ");
  1462  0698  3021               	movlw	((STR_2-__stringbase))&0ffh
  1463  0699  118A  23D7  118A   	fcall	_lcd_puts
  1464                           	line	45
  1465                           	
  1466  069C                     l7607:	
  1467                           ;CLDC001.c: 45: lcd_putch(DisplayPage + 48);
  1468  069C  1283               	bcf	status, 5	;RP0=0, select bank0
  1469  069D  1303               	bcf	status, 6	;RP1=0, select bank0
  1470  069E  085E               	movf	(_DisplayPage),w
  1471  069F  3E30               	addlw	030h
  1472  06A0  118A  233D  118A   	fcall	_lcd_putch
  1473                           	line	48
  1474                           	
  1475  06A3                     l7609:	
  1476                           ;CLDC001.c: 48: lcd_goto(0x40);
  1477  06A3  3040               	movlw	(040h)
  1478  06A4  118A  2346  118A   	fcall	_lcd_goto
  1479                           	line	49
  1480                           	
  1481  06A7                     l7611:	
  1482                           ;CLDC001.c: 49: lcd_puts("Tmp1 ");
  1483  06A7  3045               	movlw	((STR_3-__stringbase))&0ffh
  1484  06A8  118A  23D7  118A   	fcall	_lcd_puts
  1485                           	line	50
  1486                           	
  1487  06AB                     l7613:	
  1488                           ;CLDC001.c: 50: DisplayData(DataArray[DisplayPage][0]);
  1489  06AB  300A               	movlw	(0Ah)
  1490  06AC  1283               	bcf	status, 5	;RP0=0, select bank0
  1491  06AD  1303               	bcf	status, 6	;RP1=0, select bank0
  1492  06AE  00CD               	movwf	(??_RefreshDisplay+0)+0
  1493  06AF  084D               	movf	(??_RefreshDisplay+0)+0,w
  1494  06B0  00F0               	movwf	(?___bmul)
  1495  06B1  085E               	movf	(_DisplayPage),w
  1496  06B2  118A  2389  118A   	fcall	___bmul
  1497  06B5  3E20               	addlw	_DataArray&0ffh
  1498  06B6  0084               	movwf	fsr0
  1499  06B7  1383               	bcf	status, 7	;select IRP bank0
  1500  06B8  0800               	movf	indf,w
  1501  06B9  1283               	bcf	status, 5	;RP0=0, select bank0
  1502  06BA  1303               	bcf	status, 6	;RP1=0, select bank0
  1503  06BB  00CB               	movwf	(?_DisplayData)
  1504  06BC  0A84               	incf	fsr0,f
  1505  06BD  0800               	movf	indf,w
  1506  06BE  00CC               	movwf	(?_DisplayData+1)
  1507  06BF  118A  2493  118A   	fcall	_DisplayData
  1508                           	line	52
  1509                           	
  1510  06C2                     l7615:	
  1511                           ;CLDC001.c: 52: lcd_puts(" Tmp2 ");
  1512  06C2  3037               	movlw	((STR_4-__stringbase))&0ffh
  1513  06C3  118A  23D7  118A   	fcall	_lcd_puts
  1514                           	line	53
  1515                           	
  1516  06C6                     l7617:	
  1517                           ;CLDC001.c: 53: DisplayData(DataArray[DisplayPage][1]);
  1518  06C6  300A               	movlw	(0Ah)
  1519  06C7  1283               	bcf	status, 5	;RP0=0, select bank0
  1520  06C8  1303               	bcf	status, 6	;RP1=0, select bank0
  1521  06C9  00CD               	movwf	(??_RefreshDisplay+0)+0
  1522  06CA  084D               	movf	(??_RefreshDisplay+0)+0,w
  1523  06CB  00F0               	movwf	(?___bmul)
  1524  06CC  085E               	movf	(_DisplayPage),w
  1525  06CD  118A  2389  118A   	fcall	___bmul
  1526  06D0  3E02               	addlw	02h
  1527  06D1  3E20               	addlw	_DataArray&0ffh
  1528  06D2  0084               	movwf	fsr0
  1529  06D3  1383               	bcf	status, 7	;select IRP bank0
  1530  06D4  0800               	movf	indf,w
  1531  06D5  1283               	bcf	status, 5	;RP0=0, select bank0
  1532  06D6  1303               	bcf	status, 6	;RP1=0, select bank0
  1533  06D7  00CB               	movwf	(?_DisplayData)
  1534  06D8  0A84               	incf	fsr0,f
  1535  06D9  0800               	movf	indf,w
  1536  06DA  00CC               	movwf	(?_DisplayData+1)
  1537  06DB  118A  2493  118A   	fcall	_DisplayData
  1538                           	line	55
  1539                           	
  1540  06DE                     l7619:	
  1541                           ;CLDC001.c: 55: lcd_goto(0x14);
  1542  06DE  3014               	movlw	(014h)
  1543  06DF  118A  2346  118A   	fcall	_lcd_goto
  1544                           	line	56
  1545                           ;CLDC001.c: 56: lcd_puts("Tmp3 ");
  1546  06E2  304B               	movlw	((STR_5-__stringbase))&0ffh
  1547  06E3  118A  23D7  118A   	fcall	_lcd_puts
  1548                           	line	57
  1549                           ;CLDC001.c: 57: DisplayData(DataArray[DisplayPage][2]);
  1550  06E6  300A               	movlw	(0Ah)
  1551  06E7  1283               	bcf	status, 5	;RP0=0, select bank0
  1552  06E8  1303               	bcf	status, 6	;RP1=0, select bank0
  1553  06E9  00CD               	movwf	(??_RefreshDisplay+0)+0
  1554  06EA  084D               	movf	(??_RefreshDisplay+0)+0,w
  1555  06EB  00F0               	movwf	(?___bmul)
  1556  06EC  085E               	movf	(_DisplayPage),w
  1557  06ED  118A  2389  118A   	fcall	___bmul
  1558  06F0  3E04               	addlw	04h
  1559  06F1  3E20               	addlw	_DataArray&0ffh
  1560  06F2  0084               	movwf	fsr0
  1561  06F3  1383               	bcf	status, 7	;select IRP bank0
  1562  06F4  0800               	movf	indf,w
  1563  06F5  1283               	bcf	status, 5	;RP0=0, select bank0
  1564  06F6  1303               	bcf	status, 6	;RP1=0, select bank0
  1565  06F7  00CB               	movwf	(?_DisplayData)
  1566  06F8  0A84               	incf	fsr0,f
  1567  06F9  0800               	movf	indf,w
  1568  06FA  00CC               	movwf	(?_DisplayData+1)
  1569  06FB  118A  2493  118A   	fcall	_DisplayData
  1570                           	line	59
  1571                           ;CLDC001.c: 59: lcd_puts(" Tmp4 ");
  1572  06FE  303E               	movlw	((STR_6-__stringbase))&0ffh
  1573  06FF  118A  23D7  118A   	fcall	_lcd_puts
  1574                           	line	60
  1575                           ;CLDC001.c: 60: DisplayData(DataArray[DisplayPage][3]);
  1576  0702  300A               	movlw	(0Ah)
  1577  0703  1283               	bcf	status, 5	;RP0=0, select bank0
  1578  0704  1303               	bcf	status, 6	;RP1=0, select bank0
  1579  0705  00CD               	movwf	(??_RefreshDisplay+0)+0
  1580  0706  084D               	movf	(??_RefreshDisplay+0)+0,w
  1581  0707  00F0               	movwf	(?___bmul)
  1582  0708  085E               	movf	(_DisplayPage),w
  1583  0709  118A  2389  118A   	fcall	___bmul
  1584  070C  3E06               	addlw	06h
  1585  070D  3E20               	addlw	_DataArray&0ffh
  1586  070E  0084               	movwf	fsr0
  1587  070F  1383               	bcf	status, 7	;select IRP bank0
  1588  0710  0800               	movf	indf,w
  1589  0711  1283               	bcf	status, 5	;RP0=0, select bank0
  1590  0712  1303               	bcf	status, 6	;RP1=0, select bank0
  1591  0713  00CB               	movwf	(?_DisplayData)
  1592  0714  0A84               	incf	fsr0,f
  1593  0715  0800               	movf	indf,w
  1594  0716  00CC               	movwf	(?_DisplayData+1)
  1595  0717  118A  2493  118A   	fcall	_DisplayData
  1596                           	line	63
  1597                           	
  1598  071A                     l7621:	
  1599                           ;CLDC001.c: 63: lcd_goto(0x54);
  1600  071A  3054               	movlw	(054h)
  1601  071B  118A  2346  118A   	fcall	_lcd_goto
  1602                           	line	64
  1603                           	
  1604  071E                     l7623:	
  1605                           ;CLDC001.c: 64: lcd_puts("Humidity ");
  1606  071E  302D               	movlw	((STR_7-__stringbase))&0ffh
  1607  071F  118A  23D7  118A   	fcall	_lcd_puts
  1608                           	line	65
  1609                           	
  1610  0722                     l7625:	
  1611                           ;CLDC001.c: 65: DisplayData(DataArray[DisplayPage][4]);
  1612  0722  300A               	movlw	(0Ah)
  1613  0723  1283               	bcf	status, 5	;RP0=0, select bank0
  1614  0724  1303               	bcf	status, 6	;RP1=0, select bank0
  1615  0725  00CD               	movwf	(??_RefreshDisplay+0)+0
  1616  0726  084D               	movf	(??_RefreshDisplay+0)+0,w
  1617  0727  00F0               	movwf	(?___bmul)
  1618  0728  085E               	movf	(_DisplayPage),w
  1619  0729  118A  2389  118A   	fcall	___bmul
  1620  072C  3E08               	addlw	08h
  1621  072D  3E20               	addlw	_DataArray&0ffh
  1622  072E  0084               	movwf	fsr0
  1623  072F  1383               	bcf	status, 7	;select IRP bank0
  1624  0730  0800               	movf	indf,w
  1625  0731  1283               	bcf	status, 5	;RP0=0, select bank0
  1626  0732  1303               	bcf	status, 6	;RP1=0, select bank0
  1627  0733  00CB               	movwf	(?_DisplayData)
  1628  0734  0A84               	incf	fsr0,f
  1629  0735  0800               	movf	indf,w
  1630  0736  00CC               	movwf	(?_DisplayData+1)
  1631  0737  118A  2493  118A   	fcall	_DisplayData
  1632                           	line	66
  1633                           	
  1634  073A                     l1455:	
  1635  073A  0008               	return
  1636                           	opt stack 0
  1637                           GLOBAL	__end_of_RefreshDisplay
  1638  073B                     	__end_of_RefreshDisplay:
  1639 ;; =============== function _RefreshDisplay ends ============
  1640                           
  1641                           	signat	_RefreshDisplay,88
  1642                           	global	_lcd_init
  1643                           psect	text453,local,class=CODE,delta=2
  1644                           global __ptext453
  1645  0443                     __ptext453:
  1646                           
  1647 ;; *************** function _lcd_init *****************
  1648 ;; Defined at:
  1649 ;;		line 89 in file "lcd.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;		None
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  init_value      1    7[COMMON] unsigned char 
  1654 ;; Return value:  Size  Location     Type
  1655 ;;		None               void
  1656 ;; Registers used:
  1657 ;;		wreg, status,2, status,0, pclath, cstack
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1663 ;;      Params:         0       0       0       0
  1664 ;;      Locals:         1       0       0       0
  1665 ;;      Temps:          1       0       0       0
  1666 ;;      Totals:         2       0       0       0
  1667 ;;Total ram usage:        2 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; Hardware stack levels required when called:    4
  1670 ;; This function calls:
  1671 ;;		_pause
  1672 ;;		_lcd_write
  1673 ;;		_lcd_clear
  1674 ;; This function is called by:
  1675 ;;		_main
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           psect	text453
  1679                           	file	"lcd.c"
  1680                           	line	89
  1681                           	global	__size_of_lcd_init
  1682  0050                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  1683                           	
  1684  0443                     _lcd_init:	
  1685                           	opt	stack 3
  1686                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1687                           	line	92
  1688                           	
  1689  0443                     l7553:	
  1690                           ;lcd.c: 90: char init_value;
  1691                           ;lcd.c: 92: ANSEL = 0;
  1692  0443  1283               	bcf	status, 5	;RP0=0, select bank2
  1693  0444  1703               	bsf	status, 6	;RP1=1, select bank2
  1694  0445  019E               	clrf	(286)^0100h	;volatile
  1695                           	line	94
  1696                           	
  1697  0446                     l7555:	
  1698                           ;lcd.c: 94: init_value = 0x3;
  1699  0446  3003               	movlw	(03h)
  1700  0447  00F6               	movwf	(??_lcd_init+0)+0
  1701  0448  0876               	movf	(??_lcd_init+0)+0,w
  1702  0449  00F7               	movwf	(lcd_init@init_value)
  1703                           	line	95
  1704                           	
  1705  044A                     l7557:	
  1706                           ;lcd.c: 95: TRISA=0;
  1707  044A  1683               	bsf	status, 5	;RP0=1, select bank1
  1708  044B  1303               	bcf	status, 6	;RP1=0, select bank1
  1709  044C  0185               	clrf	(133)^080h	;volatile
  1710                           	line	96
  1711                           	
  1712  044D                     l7559:	
  1713                           ;lcd.c: 96: TRISC=0;
  1714  044D  0187               	clrf	(135)^080h	;volatile
  1715                           	line	97
  1716                           	
  1717  044E                     l7561:	
  1718                           ;lcd.c: 97: RA2 = 0;
  1719  044E  1283               	bcf	status, 5	;RP0=0, select bank0
  1720  044F  1303               	bcf	status, 6	;RP1=0, select bank0
  1721  0450  1105               	bcf	(42/8),(42)&7
  1722                           	line	98
  1723                           	
  1724  0451                     l7563:	
  1725                           ;lcd.c: 98: RA1 = 0;
  1726  0451  1085               	bcf	(41/8),(41)&7
  1727                           	line	99
  1728                           	
  1729  0452                     l7565:	
  1730                           ;lcd.c: 99: RA4 = 0;
  1731  0452  1205               	bcf	(44/8),(44)&7
  1732                           	line	101
  1733                           	
  1734  0453                     l7567:	
  1735                           ;lcd.c: 101: pause (15);
  1736  0453  300F               	movlw	low(0Fh)
  1737  0454  00F0               	movwf	(?_pause)
  1738  0455  3000               	movlw	high(0Fh)
  1739  0456  00F1               	movwf	((?_pause))+1
  1740  0457  118A  23A1  118A   	fcall	_pause
  1741                           	line	102
  1742                           	
  1743  045A                     l7569:	
  1744                           ;lcd.c: 102: PORTC = init_value;
  1745  045A  0877               	movf	(lcd_init@init_value),w
  1746  045B  1283               	bcf	status, 5	;RP0=0, select bank0
  1747  045C  1303               	bcf	status, 6	;RP1=0, select bank0
  1748  045D  0087               	movwf	(7)	;volatile
  1749                           	line	103
  1750                           	
  1751  045E                     l7571:	
  1752                           ;lcd.c: 103: ((RA1 = 1),(RA1=0));
  1753  045E  1485               	bsf	(41/8),(41)&7
  1754                           	
  1755  045F                     l7573:	
  1756  045F  1085               	bcf	(41/8),(41)&7
  1757                           	line	104
  1758                           	
  1759  0460                     l7575:	
  1760                           ;lcd.c: 104: pause(10);
  1761  0460  300A               	movlw	low(0Ah)
  1762  0461  00F0               	movwf	(?_pause)
  1763  0462  3000               	movlw	high(0Ah)
  1764  0463  00F1               	movwf	((?_pause))+1
  1765  0464  118A  23A1  118A   	fcall	_pause
  1766                           	line	105
  1767                           	
  1768  0467                     l7577:	
  1769                           ;lcd.c: 105: ((RA1 = 1),(RA1=0));
  1770  0467  1283               	bcf	status, 5	;RP0=0, select bank0
  1771  0468  1303               	bcf	status, 6	;RP1=0, select bank0
  1772  0469  1485               	bsf	(41/8),(41)&7
  1773                           	
  1774  046A                     l7579:	
  1775  046A  1085               	bcf	(41/8),(41)&7
  1776                           	line	106
  1777                           	
  1778  046B                     l7581:	
  1779                           ;lcd.c: 106: pause(10);
  1780  046B  300A               	movlw	low(0Ah)
  1781  046C  00F0               	movwf	(?_pause)
  1782  046D  3000               	movlw	high(0Ah)
  1783  046E  00F1               	movwf	((?_pause))+1
  1784  046F  118A  23A1  118A   	fcall	_pause
  1785                           	line	107
  1786                           	
  1787  0472                     l7583:	
  1788                           ;lcd.c: 107: ((RA1 = 1),(RA1=0));
  1789  0472  1283               	bcf	status, 5	;RP0=0, select bank0
  1790  0473  1303               	bcf	status, 6	;RP1=0, select bank0
  1791  0474  1485               	bsf	(41/8),(41)&7
  1792                           	
  1793  0475                     l7585:	
  1794  0475  1085               	bcf	(41/8),(41)&7
  1795                           	line	108
  1796                           	
  1797  0476                     l7587:	
  1798                           ;lcd.c: 108: pause(10);
  1799  0476  300A               	movlw	low(0Ah)
  1800  0477  00F0               	movwf	(?_pause)
  1801  0478  3000               	movlw	high(0Ah)
  1802  0479  00F1               	movwf	((?_pause))+1
  1803  047A  118A  23A1  118A   	fcall	_pause
  1804                           	line	109
  1805                           	
  1806  047D                     l7589:	
  1807                           ;lcd.c: 109: PORTC = 2;
  1808  047D  3002               	movlw	(02h)
  1809  047E  1283               	bcf	status, 5	;RP0=0, select bank0
  1810  047F  1303               	bcf	status, 6	;RP1=0, select bank0
  1811  0480  0087               	movwf	(7)	;volatile
  1812                           	line	110
  1813                           	
  1814  0481                     l7591:	
  1815                           ;lcd.c: 110: ((RA1 = 1),(RA1=0));
  1816  0481  1485               	bsf	(41/8),(41)&7
  1817                           	
  1818  0482                     l7593:	
  1819  0482  1085               	bcf	(41/8),(41)&7
  1820                           	line	112
  1821                           	
  1822  0483                     l7595:	
  1823                           ;lcd.c: 112: lcd_write(0x28);
  1824  0483  3028               	movlw	(028h)
  1825  0484  118A  23BA  118A   	fcall	_lcd_write
  1826                           	line	114
  1827                           	
  1828  0487                     l7597:	
  1829                           ;lcd.c: 114: lcd_write(0xF);
  1830  0487  300F               	movlw	(0Fh)
  1831  0488  118A  23BA  118A   	fcall	_lcd_write
  1832                           	line	115
  1833                           	
  1834  048B                     l7599:	
  1835                           ;lcd.c: 115: lcd_clear();
  1836  048B  118A  237A  118A   	fcall	_lcd_clear
  1837                           	line	116
  1838                           	
  1839  048E                     l7601:	
  1840                           ;lcd.c: 116: lcd_write(0x6);
  1841  048E  3006               	movlw	(06h)
  1842  048F  118A  23BA  118A   	fcall	_lcd_write
  1843                           	line	117
  1844                           	
  1845  0492                     l2198:	
  1846  0492  0008               	return
  1847                           	opt stack 0
  1848                           GLOBAL	__end_of_lcd_init
  1849  0493                     	__end_of_lcd_init:
  1850 ;; =============== function _lcd_init ends ============
  1851                           
  1852                           	signat	_lcd_init,88
  1853                           	global	_DisplayData
  1854                           psect	text454,local,class=CODE,delta=2
  1855                           global __ptext454
  1856  0493                     __ptext454:
  1857                           
  1858 ;; *************** function _DisplayData *****************
  1859 ;; Defined at:
  1860 ;;		line 30 in file "C:/Users/Dave/MPLABXProjects/CLDC001.X/CLDC001.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;  data            2    2[BANK0 ] int 
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;		None
  1865 ;; Return value:  Size  Location     Type
  1866 ;;		None               void
  1867 ;; Registers used:
  1868 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1874 ;;      Params:         0       2       0       0
  1875 ;;      Locals:         0       0       0       0
  1876 ;;      Temps:          0       0       0       0
  1877 ;;      Totals:         0       2       0       0
  1878 ;;Total ram usage:        2 bytes
  1879 ;; Hardware stack levels used:    1
  1880 ;; Hardware stack levels required when called:    4
  1881 ;; This function calls:
  1882 ;;		___awdiv
  1883 ;;		___awmod
  1884 ;;		_lcd_putch
  1885 ;;		_lcd_puts
  1886 ;; This function is called by:
  1887 ;;		_RefreshDisplay
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           psect	text454
  1891                           	file	"C:/Users/Dave/MPLABXProjects/CLDC001.X/CLDC001.c"
  1892                           	line	30
  1893                           	global	__size_of_DisplayData
  1894  005B                     	__size_of_DisplayData	equ	__end_of_DisplayData-_DisplayData
  1895                           	
  1896  0493                     _DisplayData:	
  1897                           	opt	stack 1
  1898                           ; Regs used in _DisplayData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1899                           	line	31
  1900                           	
  1901  0493                     l7547:	
  1902                           ;CLDC001.c: 31: lcd_putch((data/100)%10 + 48);
  1903  0493  300A               	movlw	low(0Ah)
  1904  0494  00F9               	movwf	(?___awmod)
  1905  0495  3000               	movlw	high(0Ah)
  1906  0496  00FA               	movwf	((?___awmod))+1
  1907  0497  3064               	movlw	low(064h)
  1908  0498  00F0               	movwf	(?___awdiv)
  1909  0499  3000               	movlw	high(064h)
  1910  049A  00F1               	movwf	((?___awdiv))+1
  1911  049B  1283               	bcf	status, 5	;RP0=0, select bank0
  1912  049C  1303               	bcf	status, 6	;RP1=0, select bank0
  1913  049D  084C               	movf	(DisplayData@data+1),w
  1914  049E  01F3               	clrf	1+(?___awdiv)+02h
  1915  049F  07F3               	addwf	1+(?___awdiv)+02h
  1916  04A0  084B               	movf	(DisplayData@data),w
  1917  04A1  01F2               	clrf	0+(?___awdiv)+02h
  1918  04A2  07F2               	addwf	0+(?___awdiv)+02h
  1919                           
  1920  04A3  118A  261D  118A   	fcall	___awdiv
  1921  04A6  0871               	movf	(1+(?___awdiv)),w
  1922  04A7  01FC               	clrf	1+(?___awmod)+02h
  1923  04A8  07FC               	addwf	1+(?___awmod)+02h
  1924  04A9  0870               	movf	(0+(?___awdiv)),w
  1925  04AA  01FB               	clrf	0+(?___awmod)+02h
  1926  04AB  07FB               	addwf	0+(?___awmod)+02h
  1927                           
  1928  04AC  118A  254A  118A   	fcall	___awmod
  1929  04AF  0879               	movf	(0+(?___awmod)),w
  1930  04B0  3E30               	addlw	030h
  1931  04B1  118A  233D  118A   	fcall	_lcd_putch
  1932                           	line	32
  1933                           ;CLDC001.c: 32: lcd_putch((data/10)%10 + 48);
  1934  04B4  300A               	movlw	low(0Ah)
  1935  04B5  00F9               	movwf	(?___awmod)
  1936  04B6  3000               	movlw	high(0Ah)
  1937  04B7  00FA               	movwf	((?___awmod))+1
  1938  04B8  300A               	movlw	low(0Ah)
  1939  04B9  00F0               	movwf	(?___awdiv)
  1940  04BA  3000               	movlw	high(0Ah)
  1941  04BB  00F1               	movwf	((?___awdiv))+1
  1942  04BC  1283               	bcf	status, 5	;RP0=0, select bank0
  1943  04BD  1303               	bcf	status, 6	;RP1=0, select bank0
  1944  04BE  084C               	movf	(DisplayData@data+1),w
  1945  04BF  01F3               	clrf	1+(?___awdiv)+02h
  1946  04C0  07F3               	addwf	1+(?___awdiv)+02h
  1947  04C1  084B               	movf	(DisplayData@data),w
  1948  04C2  01F2               	clrf	0+(?___awdiv)+02h
  1949  04C3  07F2               	addwf	0+(?___awdiv)+02h
  1950                           
  1951  04C4  118A  261D  118A   	fcall	___awdiv
  1952  04C7  0871               	movf	(1+(?___awdiv)),w
  1953  04C8  01FC               	clrf	1+(?___awmod)+02h
  1954  04C9  07FC               	addwf	1+(?___awmod)+02h
  1955  04CA  0870               	movf	(0+(?___awdiv)),w
  1956  04CB  01FB               	clrf	0+(?___awmod)+02h
  1957  04CC  07FB               	addwf	0+(?___awmod)+02h
  1958                           
  1959  04CD  118A  254A  118A   	fcall	___awmod
  1960  04D0  0879               	movf	(0+(?___awmod)),w
  1961  04D1  3E30               	addlw	030h
  1962  04D2  118A  233D  118A   	fcall	_lcd_putch
  1963                           	line	33
  1964                           	
  1965  04D5                     l7549:	
  1966                           ;CLDC001.c: 33: lcd_puts(".");
  1967  04D5  300F               	movlw	((STR_1-__stringbase))&0ffh
  1968  04D6  118A  23D7  118A   	fcall	_lcd_puts
  1969                           	line	34
  1970                           	
  1971  04D9                     l7551:	
  1972                           ;CLDC001.c: 34: lcd_putch((data)%10 + 48);
  1973  04D9  300A               	movlw	low(0Ah)
  1974  04DA  00F9               	movwf	(?___awmod)
  1975  04DB  3000               	movlw	high(0Ah)
  1976  04DC  00FA               	movwf	((?___awmod))+1
  1977  04DD  1283               	bcf	status, 5	;RP0=0, select bank0
  1978  04DE  1303               	bcf	status, 6	;RP1=0, select bank0
  1979  04DF  084C               	movf	(DisplayData@data+1),w
  1980  04E0  01FC               	clrf	1+(?___awmod)+02h
  1981  04E1  07FC               	addwf	1+(?___awmod)+02h
  1982  04E2  084B               	movf	(DisplayData@data),w
  1983  04E3  01FB               	clrf	0+(?___awmod)+02h
  1984  04E4  07FB               	addwf	0+(?___awmod)+02h
  1985                           
  1986  04E5  118A  254A  118A   	fcall	___awmod
  1987  04E8  0879               	movf	(0+(?___awmod)),w
  1988  04E9  3E30               	addlw	030h
  1989  04EA  118A  233D  118A   	fcall	_lcd_putch
  1990                           	line	35
  1991                           	
  1992  04ED                     l1452:	
  1993  04ED  0008               	return
  1994                           	opt stack 0
  1995                           GLOBAL	__end_of_DisplayData
  1996  04EE                     	__end_of_DisplayData:
  1997 ;; =============== function _DisplayData ends ============
  1998                           
  1999                           	signat	_DisplayData,4216
  2000                           	global	_lcd_goto
  2001                           psect	text455,local,class=CODE,delta=2
  2002                           global __ptext455
  2003  0346                     __ptext455:
  2004                           
  2005 ;; *************** function _lcd_goto *****************
  2006 ;; Defined at:
  2007 ;;		line 81 in file "lcd.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;  pos             1    wreg     unsigned char 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;  pos             1    6[COMMON] unsigned char 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;		None               void
  2014 ;; Registers used:
  2015 ;;		wreg, status,2, status,0, pclath, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2021 ;;      Params:         0       0       0       0
  2022 ;;      Locals:         1       0       0       0
  2023 ;;      Temps:          0       0       0       0
  2024 ;;      Totals:         1       0       0       0
  2025 ;;Total ram usage:        1 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:    3
  2028 ;; This function calls:
  2029 ;;		_lcd_write
  2030 ;; This function is called by:
  2031 ;;		_RefreshDisplay
  2032 ;;		_main
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           psect	text455
  2036                           	file	"lcd.c"
  2037                           	line	81
  2038                           	global	__size_of_lcd_goto
  2039  000A                     	__size_of_lcd_goto	equ	__end_of_lcd_goto-_lcd_goto
  2040                           	
  2041  0346                     _lcd_goto:	
  2042                           	opt	stack 2
  2043                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  2044                           ;lcd_goto@pos stored from wreg
  2045  0346  00F6               	movwf	(lcd_goto@pos)
  2046                           	line	82
  2047                           	
  2048  0347                     l7543:	
  2049                           ;lcd.c: 82: RA2 = 0;
  2050  0347  1283               	bcf	status, 5	;RP0=0, select bank0
  2051  0348  1303               	bcf	status, 6	;RP1=0, select bank0
  2052  0349  1105               	bcf	(42/8),(42)&7
  2053                           	line	83
  2054                           	
  2055  034A                     l7545:	
  2056                           ;lcd.c: 83: lcd_write(0x80+pos);
  2057  034A  0876               	movf	(lcd_goto@pos),w
  2058  034B  3E80               	addlw	080h
  2059  034C  118A  23BA  118A   	fcall	_lcd_write
  2060                           	line	84
  2061                           	
  2062  034F                     l2195:	
  2063  034F  0008               	return
  2064                           	opt stack 0
  2065                           GLOBAL	__end_of_lcd_goto
  2066  0350                     	__end_of_lcd_goto:
  2067 ;; =============== function _lcd_goto ends ============
  2068                           
  2069                           	signat	_lcd_goto,4216
  2070                           	global	_lcd_clear
  2071                           psect	text456,local,class=CODE,delta=2
  2072                           global __ptext456
  2073  037A                     __ptext456:
  2074                           
  2075 ;; *************** function _lcd_clear *****************
  2076 ;; Defined at:
  2077 ;;		line 49 in file "lcd.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;		None
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;		None
  2082 ;; Return value:  Size  Location     Type
  2083 ;;		None               void
  2084 ;; Registers used:
  2085 ;;		wreg, status,2, status,0, pclath, cstack
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2091 ;;      Params:         0       0       0       0
  2092 ;;      Locals:         0       0       0       0
  2093 ;;      Temps:          0       0       0       0
  2094 ;;      Totals:         0       0       0       0
  2095 ;;Total ram usage:        0 bytes
  2096 ;; Hardware stack levels used:    1
  2097 ;; Hardware stack levels required when called:    3
  2098 ;; This function calls:
  2099 ;;		_lcd_write
  2100 ;;		_pause
  2101 ;; This function is called by:
  2102 ;;		_RefreshDisplay
  2103 ;;		_main
  2104 ;;		_lcd_init
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           psect	text456
  2108                           	file	"lcd.c"
  2109                           	line	49
  2110                           	global	__size_of_lcd_clear
  2111  000F                     	__size_of_lcd_clear	equ	__end_of_lcd_clear-_lcd_clear
  2112                           	
  2113  037A                     _lcd_clear:	
  2114                           	opt	stack 2
  2115                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2116                           	line	50
  2117                           	
  2118  037A                     l7539:	
  2119                           ;lcd.c: 50: RA2 = 0;
  2120  037A  1283               	bcf	status, 5	;RP0=0, select bank0
  2121  037B  1303               	bcf	status, 6	;RP1=0, select bank0
  2122  037C  1105               	bcf	(42/8),(42)&7
  2123                           	line	51
  2124                           	
  2125  037D                     l7541:	
  2126                           ;lcd.c: 51: lcd_write(0x1);
  2127  037D  3001               	movlw	(01h)
  2128  037E  118A  23BA  118A   	fcall	_lcd_write
  2129                           	line	52
  2130                           ;lcd.c: 52: pause (2);
  2131  0381  3002               	movlw	low(02h)
  2132  0382  00F0               	movwf	(?_pause)
  2133  0383  3000               	movlw	high(02h)
  2134  0384  00F1               	movwf	((?_pause))+1
  2135  0385  118A  23A1  118A   	fcall	_pause
  2136                           	line	53
  2137                           	
  2138  0388                     l2183:	
  2139  0388  0008               	return
  2140                           	opt stack 0
  2141                           GLOBAL	__end_of_lcd_clear
  2142  0389                     	__end_of_lcd_clear:
  2143 ;; =============== function _lcd_clear ends ============
  2144                           
  2145                           	signat	_lcd_clear,88
  2146                           	global	_lcd_puts
  2147                           psect	text457,local,class=CODE,delta=2
  2148                           global __ptext457
  2149  03D7                     __ptext457:
  2150                           
  2151 ;; *************** function _lcd_puts *****************
  2152 ;; Defined at:
  2153 ;;		line 59 in file "lcd.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  s               1    wreg     PTR const unsigned char 
  2156 ;;		 -> STR_9(16), STR_8(16), STR_7(10), STR_6(7), 
  2157 ;;		 -> STR_5(6), STR_4(7), STR_3(6), STR_2(12), 
  2158 ;;		 -> STR_1(2), 
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  s               1    7[COMMON] PTR const unsigned char 
  2161 ;;		 -> STR_9(16), STR_8(16), STR_7(10), STR_6(7), 
  2162 ;;		 -> STR_5(6), STR_4(7), STR_3(6), STR_2(12), 
  2163 ;;		 -> STR_1(2), 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;		None               void
  2166 ;; Registers used:
  2167 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2173 ;;      Params:         0       0       0       0
  2174 ;;      Locals:         1       0       0       0
  2175 ;;      Temps:          1       0       0       0
  2176 ;;      Totals:         2       0       0       0
  2177 ;;Total ram usage:        2 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; Hardware stack levels required when called:    3
  2180 ;; This function calls:
  2181 ;;		_lcd_write
  2182 ;; This function is called by:
  2183 ;;		_DisplayData
  2184 ;;		_RefreshDisplay
  2185 ;;		_main
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           psect	text457
  2189                           	file	"lcd.c"
  2190                           	line	59
  2191                           	global	__size_of_lcd_puts
  2192  001E                     	__size_of_lcd_puts	equ	__end_of_lcd_puts-_lcd_puts
  2193                           	
  2194  03D7                     _lcd_puts:	
  2195                           	opt	stack 1
  2196                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2197                           ;lcd_puts@s stored from wreg
  2198  03D7  00F7               	movwf	(lcd_puts@s)
  2199                           	line	60
  2200                           	
  2201  03D8                     l7531:	
  2202                           ;lcd.c: 60: RA2 = 1;
  2203  03D8  1283               	bcf	status, 5	;RP0=0, select bank0
  2204  03D9  1303               	bcf	status, 6	;RP1=0, select bank0
  2205  03DA  1505               	bsf	(42/8),(42)&7
  2206                           	line	61
  2207                           ;lcd.c: 61: while(*s)
  2208  03DB  2BE9               	goto	l7537
  2209                           	
  2210  03DC                     l2187:	
  2211                           	line	62
  2212                           	
  2213  03DC                     l7533:	
  2214                           ;lcd.c: 62: lcd_write(*s++);
  2215  03DC  0877               	movf	(lcd_puts@s),w
  2216  03DD  0084               	movwf	fsr0
  2217  03DE  118A  2002  118A   	fcall	stringdir
  2218  03E1  118A  23BA  118A   	fcall	_lcd_write
  2219                           	
  2220  03E4                     l7535:	
  2221  03E4  3001               	movlw	(01h)
  2222  03E5  00F6               	movwf	(??_lcd_puts+0)+0
  2223  03E6  0876               	movf	(??_lcd_puts+0)+0,w
  2224  03E7  07F7               	addwf	(lcd_puts@s),f
  2225  03E8  2BE9               	goto	l7537
  2226                           	
  2227  03E9                     l2186:	
  2228                           	line	61
  2229                           	
  2230  03E9                     l7537:	
  2231  03E9  0877               	movf	(lcd_puts@s),w
  2232  03EA  0084               	movwf	fsr0
  2233  03EB  118A  2002  118A   	fcall	stringdir
  2234  03EE  3800               	iorlw	0
  2235  03EF  1D03               	skipz
  2236  03F0  2BF2               	goto	u2871
  2237  03F1  2BF3               	goto	u2870
  2238  03F2                     u2871:
  2239  03F2  2BDC               	goto	l7533
  2240  03F3                     u2870:
  2241  03F3  2BF4               	goto	l2189
  2242                           	
  2243  03F4                     l2188:	
  2244                           	line	63
  2245                           	
  2246  03F4                     l2189:	
  2247  03F4  0008               	return
  2248                           	opt stack 0
  2249                           GLOBAL	__end_of_lcd_puts
  2250  03F5                     	__end_of_lcd_puts:
  2251 ;; =============== function _lcd_puts ends ============
  2252                           
  2253                           	signat	_lcd_puts,4216
  2254                           	global	_lcd_putch
  2255                           psect	text458,local,class=CODE,delta=2
  2256                           global __ptext458
  2257  033D                     __ptext458:
  2258                           
  2259 ;; *************** function _lcd_putch *****************
  2260 ;; Defined at:
  2261 ;;		line 69 in file "lcd.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  c               1    wreg     unsigned char 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  c               1    6[COMMON] unsigned char 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;		None               void
  2268 ;; Registers used:
  2269 ;;		wreg, status,2, status,0, pclath, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2275 ;;      Params:         0       0       0       0
  2276 ;;      Locals:         1       0       0       0
  2277 ;;      Temps:          0       0       0       0
  2278 ;;      Totals:         1       0       0       0
  2279 ;;Total ram usage:        1 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; Hardware stack levels required when called:    3
  2282 ;; This function calls:
  2283 ;;		_lcd_write
  2284 ;; This function is called by:
  2285 ;;		_DisplayData
  2286 ;;		_RefreshDisplay
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           psect	text458
  2290                           	file	"lcd.c"
  2291                           	line	69
  2292                           	global	__size_of_lcd_putch
  2293  0009                     	__size_of_lcd_putch	equ	__end_of_lcd_putch-_lcd_putch
  2294                           	
  2295  033D                     _lcd_putch:	
  2296                           	opt	stack 1
  2297                           ; Regs used in _lcd_putch: [wreg+status,2+status,0+pclath+cstack]
  2298                           ;lcd_putch@c stored from wreg
  2299  033D  00F6               	movwf	(lcd_putch@c)
  2300                           	line	70
  2301                           	
  2302  033E                     l7527:	
  2303                           ;lcd.c: 70: RA2 = 1;
  2304  033E  1283               	bcf	status, 5	;RP0=0, select bank0
  2305  033F  1303               	bcf	status, 6	;RP1=0, select bank0
  2306  0340  1505               	bsf	(42/8),(42)&7
  2307                           	line	71
  2308                           	
  2309  0341                     l7529:	
  2310                           ;lcd.c: 71: lcd_write( c );
  2311  0341  0876               	movf	(lcd_putch@c),w
  2312  0342  118A  23BA  118A   	fcall	_lcd_write
  2313                           	line	72
  2314                           	
  2315  0345                     l2192:	
  2316  0345  0008               	return
  2317                           	opt stack 0
  2318                           GLOBAL	__end_of_lcd_putch
  2319  0346                     	__end_of_lcd_putch:
  2320 ;; =============== function _lcd_putch ends ============
  2321                           
  2322                           	signat	_lcd_putch,4216
  2323                           	global	_lcd_write
  2324                           psect	text459,local,class=CODE,delta=2
  2325                           global __ptext459
  2326  03BA                     __ptext459:
  2327                           
  2328 ;; *************** function _lcd_write *****************
  2329 ;; Defined at:
  2330 ;;		line 34 in file "lcd.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  c               1    wreg     unsigned char 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  c               1    5[COMMON] unsigned char 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;		None               void
  2337 ;; Registers used:
  2338 ;;		wreg, status,2, status,0, pclath, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2344 ;;      Params:         0       0       0       0
  2345 ;;      Locals:         1       0       0       0
  2346 ;;      Temps:          1       0       0       0
  2347 ;;      Totals:         2       0       0       0
  2348 ;;Total ram usage:        2 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:    2
  2351 ;; This function calls:
  2352 ;;		_pause
  2353 ;; This function is called by:
  2354 ;;		_lcd_clear
  2355 ;;		_lcd_puts
  2356 ;;		_lcd_putch
  2357 ;;		_lcd_goto
  2358 ;;		_lcd_init
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           psect	text459
  2362                           	file	"lcd.c"
  2363                           	line	34
  2364                           	global	__size_of_lcd_write
  2365  001D                     	__size_of_lcd_write	equ	__end_of_lcd_write-_lcd_write
  2366                           	
  2367  03BA                     _lcd_write:	
  2368                           	opt	stack 1
  2369                           ; Regs used in _lcd_write: [wreg+status,2+status,0+pclath+cstack]
  2370                           ;lcd_write@c stored from wreg
  2371  03BA  00F5               	movwf	(lcd_write@c)
  2372                           	line	35
  2373                           	
  2374  03BB                     l7513:	
  2375                           ;lcd.c: 35: pause (1);
  2376  03BB  3001               	movlw	low(01h)
  2377  03BC  00F0               	movwf	(?_pause)
  2378  03BD  3000               	movlw	high(01h)
  2379  03BE  00F1               	movwf	((?_pause))+1
  2380  03BF  118A  23A1  118A   	fcall	_pause
  2381                           	line	36
  2382                           	
  2383  03C2                     l7515:	
  2384                           ;lcd.c: 36: PORTC = ( ( c >> 4 ) & 0x0F );
  2385  03C2  0875               	movf	(lcd_write@c),w
  2386  03C3  00F4               	movwf	(??_lcd_write+0)+0
  2387  03C4  3004               	movlw	04h
  2388  03C5                     u2865:
  2389  03C5  1003               	clrc
  2390  03C6  0CF4               	rrf	(??_lcd_write+0)+0,f
  2391  03C7  3EFF               	addlw	-1
  2392  03C8  1D03               	skipz
  2393  03C9  2BC5               	goto	u2865
  2394  03CA  0874               	movf	0+(??_lcd_write+0)+0,w
  2395  03CB  390F               	andlw	0Fh
  2396  03CC  1283               	bcf	status, 5	;RP0=0, select bank0
  2397  03CD  1303               	bcf	status, 6	;RP1=0, select bank0
  2398  03CE  0087               	movwf	(7)	;volatile
  2399                           	line	37
  2400                           	
  2401  03CF                     l7517:	
  2402                           ;lcd.c: 37: ((RA1 = 1),(RA1=0));
  2403  03CF  1485               	bsf	(41/8),(41)&7
  2404                           	
  2405  03D0                     l7519:	
  2406  03D0  1085               	bcf	(41/8),(41)&7
  2407                           	line	38
  2408                           	
  2409  03D1                     l7521:	
  2410                           ;lcd.c: 38: PORTC = ( c & 0x0F );
  2411  03D1  0875               	movf	(lcd_write@c),w
  2412  03D2  390F               	andlw	0Fh
  2413  03D3  0087               	movwf	(7)	;volatile
  2414                           	line	39
  2415                           	
  2416  03D4                     l7523:	
  2417                           ;lcd.c: 39: ((RA1 = 1),(RA1=0));
  2418  03D4  1485               	bsf	(41/8),(41)&7
  2419                           	
  2420  03D5                     l7525:	
  2421  03D5  1085               	bcf	(41/8),(41)&7
  2422                           	line	41
  2423                           	
  2424  03D6                     l2180:	
  2425  03D6  0008               	return
  2426                           	opt stack 0
  2427                           GLOBAL	__end_of_lcd_write
  2428  03D7                     	__end_of_lcd_write:
  2429 ;; =============== function _lcd_write ends ============
  2430                           
  2431                           	signat	_lcd_write,4216
  2432                           	global	_onewire_listen
  2433                           psect	text460,local,class=CODE,delta=2
  2434                           global __ptext460
  2435  03F5                     __ptext460:
  2436                           
  2437 ;; *************** function _onewire_listen *****************
  2438 ;; Defined at:
  2439 ;;		line 92 in file "C:/Users/Dave/MPLABXProjects/CLDC001.X/CLDTP1.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  address         1    wreg     unsigned char 
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;  address         1    8[COMMON] unsigned char 
  2444 ;;  message_reci    2    9[COMMON] int 
  2445 ;;  Payload         1   12[COMMON] unsigned char 
  2446 ;;  RxAddress       1   11[COMMON] unsigned char 
  2447 ;;  TxAddress       1    7[COMMON] unsigned char 
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      unsigned char 
  2450 ;; Registers used:
  2451 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2457 ;;      Params:         0       0       0       0
  2458 ;;      Locals:         6       0       0       0
  2459 ;;      Temps:          1       0       0       0
  2460 ;;      Totals:         7       0       0       0
  2461 ;;Total ram usage:        7 bytes
  2462 ;; Hardware stack levels used:    1
  2463 ;; Hardware stack levels required when called:    1
  2464 ;; This function calls:
  2465 ;;		_onewire_read
  2466 ;; This function is called by:
  2467 ;;		_ReceivePage
  2468 ;;		_RecieveSensorData
  2469 ;;		_main
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           psect	text460
  2473                           	file	"C:/Users/Dave/MPLABXProjects/CLDC001.X/CLDTP1.c"
  2474                           	line	92
  2475                           	global	__size_of_onewire_listen
  2476  004E                     	__size_of_onewire_listen	equ	__end_of_onewire_listen-_onewire_listen
  2477                           	
  2478  03F5                     _onewire_listen:	
  2479                           	opt	stack 5
  2480                           ; Regs used in _onewire_listen: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2481                           ;onewire_listen@address stored from wreg
  2482                           	line	96
  2483  03F5  00F8               	movwf	(onewire_listen@address)
  2484                           	
  2485  03F6                     l7493:	
  2486                           ;CLDTP1.c: 93: unsigned char RxAddress;
  2487                           ;CLDTP1.c: 94: unsigned char TxAddress;
  2488                           ;CLDTP1.c: 95: unsigned char Payload;
  2489                           ;CLDTP1.c: 96: int message_recieved = 0;
  2490  03F6  01F9               	clrf	(onewire_listen@message_recieved)
  2491  03F7  01FA               	clrf	(onewire_listen@message_recieved+1)
  2492                           	line	98
  2493                           ;CLDTP1.c: 98: while(message_recieved == 0)
  2494  03F8  2C3B               	goto	l7511
  2495                           	
  2496  03F9                     l4714:	
  2497                           	line	100
  2498                           ;CLDTP1.c: 99: {
  2499                           ;CLDTP1.c: 100: while((0b10000000&PORTB)>0)
  2500  03F9  2BFA               	goto	l4715
  2501                           	
  2502  03FA                     l4716:	
  2503                           	line	101
  2504                           ;CLDTP1.c: 101: {}
  2505                           	
  2506  03FA                     l4715:	
  2507                           	line	100
  2508  03FA  1283               	bcf	status, 5	;RP0=0, select bank0
  2509  03FB  1303               	bcf	status, 6	;RP1=0, select bank0
  2510  03FC  1B86               	btfsc	(6),(7)&7
  2511  03FD  2BFF               	goto	u2811
  2512  03FE  2C00               	goto	u2810
  2513  03FF                     u2811:
  2514  03FF  2BFA               	goto	l4715
  2515  0400                     u2810:
  2516  0400  2C01               	goto	l7495
  2517                           	
  2518  0401                     l4717:	
  2519                           	line	104
  2520                           	
  2521  0401                     l7495:	
  2522                           ;CLDTP1.c: 104: RxAddress = onewire_read();
  2523  0401  118A  25B2  118A   	fcall	_onewire_read
  2524  0404  00F6               	movwf	(??_onewire_listen+0)+0
  2525  0405  0876               	movf	(??_onewire_listen+0)+0,w
  2526  0406  00FB               	movwf	(onewire_listen@RxAddress)
  2527                           	line	107
  2528                           	
  2529  0407                     l7497:	
  2530                           ;CLDTP1.c: 107: _delay((unsigned long)((10)*(8000000/4000000.0)));
  2531                           	opt asmopt_off
  2532  0407  3006               movlw	6
  2533  0408  00F6               movwf	(??_onewire_listen+0)+0,f
  2534  0409                     u2917:
  2535  0409  0BF6               decfsz	(??_onewire_listen+0)+0,f
  2536  040A  2C09               	goto	u2917
  2537  040B  0064               	clrwdt
  2538                           opt asmopt_on
  2539                           
  2540                           	line	108
  2541                           ;CLDTP1.c: 108: while((0b10000000&PORTB)>0)
  2542  040C  2C0D               	goto	l4718
  2543                           	
  2544  040D                     l4719:	
  2545                           	line	109
  2546                           ;CLDTP1.c: 109: {}
  2547                           	
  2548  040D                     l4718:	
  2549                           	line	108
  2550  040D  1283               	bcf	status, 5	;RP0=0, select bank0
  2551  040E  1303               	bcf	status, 6	;RP1=0, select bank0
  2552  040F  1B86               	btfsc	(6),(7)&7
  2553  0410  2C12               	goto	u2821
  2554  0411  2C13               	goto	u2820
  2555  0412                     u2821:
  2556  0412  2C0D               	goto	l4718
  2557  0413                     u2820:
  2558  0413  2C14               	goto	l7499
  2559                           	
  2560  0414                     l4720:	
  2561                           	line	110
  2562                           	
  2563  0414                     l7499:	
  2564                           ;CLDTP1.c: 110: TxAddress = onewire_read();
  2565  0414  118A  25B2  118A   	fcall	_onewire_read
  2566  0417  00F6               	movwf	(??_onewire_listen+0)+0
  2567  0418  0876               	movf	(??_onewire_listen+0)+0,w
  2568  0419  00F7               	movwf	(onewire_listen@TxAddress)
  2569                           	line	113
  2570                           	
  2571  041A                     l7501:	
  2572                           ;CLDTP1.c: 113: _delay((unsigned long)((10)*(8000000/4000000.0)));
  2573                           	opt asmopt_off
  2574  041A  3006               movlw	6
  2575  041B  00F6               movwf	(??_onewire_listen+0)+0,f
  2576  041C                     u2927:
  2577  041C  0BF6               decfsz	(??_onewire_listen+0)+0,f
  2578  041D  2C1C               	goto	u2927
  2579  041E  0064               	clrwdt
  2580                           opt asmopt_on
  2581                           
  2582                           	line	114
  2583                           ;CLDTP1.c: 114: while((0b10000000&PORTB)>0)
  2584  041F  2C20               	goto	l4721
  2585                           	
  2586  0420                     l4722:	
  2587                           	line	115
  2588                           ;CLDTP1.c: 115: {}
  2589                           	
  2590  0420                     l4721:	
  2591                           	line	114
  2592  0420  1283               	bcf	status, 5	;RP0=0, select bank0
  2593  0421  1303               	bcf	status, 6	;RP1=0, select bank0
  2594  0422  1B86               	btfsc	(6),(7)&7
  2595  0423  2C25               	goto	u2831
  2596  0424  2C26               	goto	u2830
  2597  0425                     u2831:
  2598  0425  2C20               	goto	l4721
  2599  0426                     u2830:
  2600  0426  2C27               	goto	l7503
  2601                           	
  2602  0427                     l4723:	
  2603                           	line	116
  2604                           	
  2605  0427                     l7503:	
  2606                           ;CLDTP1.c: 116: Payload = onewire_read();
  2607  0427  118A  25B2  118A   	fcall	_onewire_read
  2608  042A  00F6               	movwf	(??_onewire_listen+0)+0
  2609  042B  0876               	movf	(??_onewire_listen+0)+0,w
  2610  042C  00FC               	movwf	(onewire_listen@Payload)
  2611                           	line	118
  2612                           	
  2613  042D                     l7505:	
  2614                           ;CLDTP1.c: 118: if(RxAddress == address)
  2615  042D  087B               	movf	(onewire_listen@RxAddress),w
  2616  042E  0678               	xorwf	(onewire_listen@address),w
  2617  042F  1D03               	skipz
  2618  0430  2C32               	goto	u2841
  2619  0431  2C33               	goto	u2840
  2620  0432                     u2841:
  2621  0432  2C3B               	goto	l7511
  2622  0433                     u2840:
  2623                           	line	120
  2624                           	
  2625  0433                     l7507:	
  2626                           ;CLDTP1.c: 119: {
  2627                           ;CLDTP1.c: 120: message_recieved = 1;
  2628  0433  3001               	movlw	low(01h)
  2629  0434  00F9               	movwf	(onewire_listen@message_recieved)
  2630  0435  3000               	movlw	high(01h)
  2631  0436  00FA               	movwf	((onewire_listen@message_recieved))+1
  2632                           	line	121
  2633                           ;CLDTP1.c: 121: return Payload;
  2634  0437  087C               	movf	(onewire_listen@Payload),w
  2635  0438  2C42               	goto	l4725
  2636                           	
  2637  0439                     l7509:	
  2638  0439  2C42               	goto	l4725
  2639                           	line	122
  2640                           	
  2641  043A                     l4724:	
  2642  043A  2C3B               	goto	l7511
  2643                           	line	123
  2644                           	
  2645  043B                     l4713:	
  2646                           	line	98
  2647                           	
  2648  043B                     l7511:	
  2649  043B  087A               	movf	(onewire_listen@message_recieved+1),w
  2650  043C  0479               	iorwf	(onewire_listen@message_recieved),w
  2651  043D  1903               	skipnz
  2652  043E  2C40               	goto	u2851
  2653  043F  2C41               	goto	u2850
  2654  0440                     u2851:
  2655  0440  2BFA               	goto	l4715
  2656  0441                     u2850:
  2657  0441  2C42               	goto	l4725
  2658                           	
  2659  0442                     l4726:	
  2660                           	line	124
  2661                           	
  2662  0442                     l4725:	
  2663  0442  0008               	return
  2664                           	opt stack 0
  2665                           GLOBAL	__end_of_onewire_listen
  2666  0443                     	__end_of_onewire_listen:
  2667 ;; =============== function _onewire_listen ends ============
  2668                           
  2669                           	signat	_onewire_listen,4217
  2670                           	global	_onewire_read
  2671                           psect	text461,local,class=CODE,delta=2
  2672                           global __ptext461
  2673  05B2                     __ptext461:
  2674                           
  2675 ;; *************** function _onewire_read *****************
  2676 ;; Defined at:
  2677 ;;		line 51 in file "C:/Users/Dave/MPLABXProjects/CLDC001.X/CLDTP1.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;		None
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;  count           2    3[COMMON] int 
  2682 ;;  data            1    5[COMMON] unsigned char 
  2683 ;;  databit         1    2[COMMON] unsigned char 
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  1    wreg      unsigned char 
  2686 ;; Registers used:
  2687 ;;		wreg, status,2, status,0, btemp+1
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2693 ;;      Params:         0       0       0       0
  2694 ;;      Locals:         4       0       0       0
  2695 ;;      Temps:          2       0       0       0
  2696 ;;      Totals:         6       0       0       0
  2697 ;;Total ram usage:        6 bytes
  2698 ;; Hardware stack levels used:    1
  2699 ;; This function calls:
  2700 ;;		Nothing
  2701 ;; This function is called by:
  2702 ;;		_onewire_listen
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           psect	text461
  2706                           	file	"C:/Users/Dave/MPLABXProjects/CLDC001.X/CLDTP1.c"
  2707                           	line	51
  2708                           	global	__size_of_onewire_read
  2709  006B                     	__size_of_onewire_read	equ	__end_of_onewire_read-_onewire_read
  2710                           	
  2711  05B2                     _onewire_read:	
  2712                           	opt	stack 5
  2713                           ; Regs used in _onewire_read: [wreg+status,2+status,0+btemp+1]
  2714                           	line	52
  2715                           	
  2716  05B2                     l7461:	
  2717                           ;CLDTP1.c: 52: char data = 0x0;
  2718  05B2  01F5               	clrf	(onewire_read@data)
  2719                           	line	53
  2720                           ;CLDTP1.c: 53: char databit = 0;
  2721  05B3  01F2               	clrf	(onewire_read@databit)
  2722                           	line	54
  2723                           	
  2724  05B4                     l7463:	
  2725                           ;CLDTP1.c: 54: for (int count = 8;count > 0;count--)
  2726  05B4  3008               	movlw	low(08h)
  2727  05B5  00F3               	movwf	(onewire_read@count)
  2728  05B6  3000               	movlw	high(08h)
  2729  05B7  00F4               	movwf	((onewire_read@count))+1
  2730                           	
  2731  05B8                     l7465:	
  2732  05B8  0874               	movf	(onewire_read@count+1),w
  2733  05B9  3A80               	xorlw	80h
  2734  05BA  00FF               	movwf	btemp+1
  2735  05BB  3080               	movlw	(high(01h))^80h
  2736  05BC  027F               	subwf	btemp+1,w
  2737  05BD  1D03               	skipz
  2738  05BE  2DC1               	goto	u2745
  2739  05BF  3001               	movlw	low(01h)
  2740  05C0  0273               	subwf	(onewire_read@count),w
  2741  05C1                     u2745:
  2742                           
  2743  05C1  1803               	skipnc
  2744  05C2  2DC4               	goto	u2741
  2745  05C3  2DC5               	goto	u2740
  2746  05C4                     u2741:
  2747  05C4  2DC7               	goto	l7469
  2748  05C5                     u2740:
  2749  05C5  2E1A               	goto	l7489
  2750                           	
  2751  05C6                     l7467:	
  2752  05C6  2E1A               	goto	l7489
  2753                           	line	55
  2754                           	
  2755  05C7                     l4698:	
  2756                           	line	56
  2757                           	
  2758  05C7                     l7469:	
  2759                           ;CLDTP1.c: 55: {
  2760                           ;CLDTP1.c: 56: _delay((unsigned long)((30)*(8000000/4000000.0)));
  2761                           	opt asmopt_off
  2762  05C7  3013               movlw	19
  2763  05C8  00F0               movwf	(??_onewire_read+0)+0,f
  2764  05C9                     u2937:
  2765  05C9  0BF0               decfsz	(??_onewire_read+0)+0,f
  2766  05CA  2DC9               	goto	u2937
  2767  05CB  2DCC               	nop2	;nop
  2768                           opt asmopt_on
  2769                           
  2770                           	line	59
  2771                           	
  2772  05CC                     l7471:	
  2773                           ;CLDTP1.c: 59: if ((PORTB & 0b10000000) > 0)
  2774  05CC  1283               	bcf	status, 5	;RP0=0, select bank0
  2775  05CD  1303               	bcf	status, 6	;RP1=0, select bank0
  2776  05CE  1F86               	btfss	(6),(7)&7
  2777  05CF  2DD1               	goto	u2751
  2778  05D0  2DD2               	goto	u2750
  2779  05D1                     u2751:
  2780  05D1  2DD6               	goto	l4700
  2781  05D2                     u2750:
  2782                           	line	61
  2783                           	
  2784  05D2                     l7473:	
  2785                           ;CLDTP1.c: 60: {
  2786                           ;CLDTP1.c: 61: databit = 1;
  2787  05D2  01F2               	clrf	(onewire_read@databit)
  2788  05D3  1403               	bsf	status,0
  2789  05D4  0DF2               	rlf	(onewire_read@databit),f
  2790                           	line	62
  2791                           ;CLDTP1.c: 62: }
  2792  05D5  2DD8               	goto	l7475
  2793                           	line	63
  2794                           	
  2795  05D6                     l4700:	
  2796                           	line	65
  2797                           ;CLDTP1.c: 63: else
  2798                           ;CLDTP1.c: 64: {
  2799                           ;CLDTP1.c: 65: databit = 0;
  2800  05D6  01F2               	clrf	(onewire_read@databit)
  2801  05D7  2DD8               	goto	l7475
  2802                           	line	66
  2803                           	
  2804  05D8                     l4701:	
  2805                           	line	70
  2806                           	
  2807  05D8                     l7475:	
  2808                           ;CLDTP1.c: 66: }
  2809                           ;CLDTP1.c: 70: data = (data >> 1);
  2810  05D8  0875               	movf	(onewire_read@data),w
  2811  05D9  00F0               	movwf	(??_onewire_read+0)+0
  2812  05DA  1003               	clrc
  2813  05DB  0C70               	rrf	(??_onewire_read+0)+0,w
  2814  05DC  00F1               	movwf	(??_onewire_read+1)+0
  2815  05DD  0871               	movf	(??_onewire_read+1)+0,w
  2816  05DE  00F5               	movwf	(onewire_read@data)
  2817                           	line	71
  2818                           	
  2819  05DF                     l7477:	
  2820                           ;CLDTP1.c: 71: if (databit > 0)
  2821  05DF  0872               	movf	(onewire_read@databit),w
  2822  05E0  1D03               	skipz
  2823  05E1  2DE3               	goto	u2760
  2824  05E2  2DEA               	goto	l4703
  2825  05E3                     u2760:
  2826                           	line	73
  2827                           	
  2828  05E3                     l7479:	
  2829                           ;CLDTP1.c: 72: {
  2830                           ;CLDTP1.c: 73: data = (data + 0b10000000);
  2831  05E3  0875               	movf	(onewire_read@data),w
  2832  05E4  3E80               	addlw	080h
  2833  05E5  00F0               	movwf	(??_onewire_read+0)+0
  2834  05E6  0870               	movf	(??_onewire_read+0)+0,w
  2835  05E7  00F5               	movwf	(onewire_read@data)
  2836  05E8  2DEA               	goto	l4703
  2837                           	line	74
  2838                           	
  2839  05E9                     l4702:	
  2840                           	line	78
  2841                           ;CLDTP1.c: 74: }
  2842                           ;CLDTP1.c: 78: while((PORTB & 0b10000000) == 0)
  2843  05E9  2DEA               	goto	l4703
  2844                           	
  2845  05EA                     l4704:	
  2846                           	line	79
  2847                           ;CLDTP1.c: 79: {}
  2848                           	
  2849  05EA                     l4703:	
  2850                           	line	78
  2851  05EA  1F86               	btfss	(6),(7)&7
  2852  05EB  2DED               	goto	u2771
  2853  05EC  2DEE               	goto	u2770
  2854  05ED                     u2771:
  2855  05ED  2DEA               	goto	l4703
  2856  05EE                     u2770:
  2857  05EE  2DEF               	goto	l7481
  2858                           	
  2859  05EF                     l4705:	
  2860                           	line	81
  2861                           	
  2862  05EF                     l7481:	
  2863                           ;CLDTP1.c: 81: if (count > 1)
  2864  05EF  0874               	movf	(onewire_read@count+1),w
  2865  05F0  3A80               	xorlw	80h
  2866  05F1  00FF               	movwf	btemp+1
  2867  05F2  3080               	movlw	(high(02h))^80h
  2868  05F3  027F               	subwf	btemp+1,w
  2869  05F4  1D03               	skipz
  2870  05F5  2DF8               	goto	u2785
  2871  05F6  3002               	movlw	low(02h)
  2872  05F7  0273               	subwf	(onewire_read@count),w
  2873  05F8                     u2785:
  2874                           
  2875  05F8  1C03               	skipc
  2876  05F9  2DFB               	goto	u2781
  2877  05FA  2DFC               	goto	u2780
  2878  05FB                     u2781:
  2879  05FB  2E06               	goto	l7485
  2880  05FC                     u2780:
  2881  05FC  2DFE               	goto	l4707
  2882                           	line	83
  2883                           	
  2884  05FD                     l7483:	
  2885                           ;CLDTP1.c: 82: {
  2886                           ;CLDTP1.c: 83: while((PORTB & 0b10000000) > 0)
  2887  05FD  2DFE               	goto	l4707
  2888                           	
  2889  05FE                     l4708:	
  2890                           	line	84
  2891                           ;CLDTP1.c: 84: {}
  2892                           	
  2893  05FE                     l4707:	
  2894                           	line	83
  2895  05FE  1283               	bcf	status, 5	;RP0=0, select bank0
  2896  05FF  1303               	bcf	status, 6	;RP1=0, select bank0
  2897  0600  1B86               	btfsc	(6),(7)&7
  2898  0601  2E03               	goto	u2791
  2899  0602  2E04               	goto	u2790
  2900  0603                     u2791:
  2901  0603  2DFE               	goto	l4707
  2902  0604                     u2790:
  2903  0604  2E06               	goto	l7485
  2904                           	
  2905  0605                     l4709:	
  2906  0605  2E06               	goto	l7485
  2907                           	line	85
  2908                           	
  2909  0606                     l4706:	
  2910                           	line	54
  2911                           	
  2912  0606                     l7485:	
  2913  0606  30FF               	movlw	low(-1)
  2914  0607  07F3               	addwf	(onewire_read@count),f
  2915  0608  1803               	skipnc
  2916  0609  0AF4               	incf	(onewire_read@count+1),f
  2917  060A  30FF               	movlw	high(-1)
  2918  060B  07F4               	addwf	(onewire_read@count+1),f
  2919                           	
  2920  060C                     l7487:	
  2921  060C  0874               	movf	(onewire_read@count+1),w
  2922  060D  3A80               	xorlw	80h
  2923  060E  00FF               	movwf	btemp+1
  2924  060F  3080               	movlw	(high(01h))^80h
  2925  0610  027F               	subwf	btemp+1,w
  2926  0611  1D03               	skipz
  2927  0612  2E15               	goto	u2805
  2928  0613  3001               	movlw	low(01h)
  2929  0614  0273               	subwf	(onewire_read@count),w
  2930  0615                     u2805:
  2931                           
  2932  0615  1803               	skipnc
  2933  0616  2E18               	goto	u2801
  2934  0617  2E19               	goto	u2800
  2935  0618                     u2801:
  2936  0618  2DC7               	goto	l7469
  2937  0619                     u2800:
  2938  0619  2E1A               	goto	l7489
  2939                           	
  2940  061A                     l4699:	
  2941                           	line	88
  2942                           	
  2943  061A                     l7489:	
  2944                           ;CLDTP1.c: 85: }
  2945                           ;CLDTP1.c: 87: }
  2946                           ;CLDTP1.c: 88: return data;
  2947  061A  0875               	movf	(onewire_read@data),w
  2948  061B  2E1C               	goto	l4710
  2949                           	
  2950  061C                     l7491:	
  2951                           	line	89
  2952                           	
  2953  061C                     l4710:	
  2954  061C  0008               	return
  2955                           	opt stack 0
  2956                           GLOBAL	__end_of_onewire_read
  2957  061D                     	__end_of_onewire_read:
  2958 ;; =============== function _onewire_read ends ============
  2959                           
  2960                           	signat	_onewire_read,89
  2961                           	global	_pause
  2962                           psect	text462,local,class=CODE,delta=2
  2963                           global __ptext462
  2964  03A1                     __ptext462:
  2965                           
  2966 ;; *************** function _pause *****************
  2967 ;; Defined at:
  2968 ;;		line 10 in file "pause.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  usvalue         2    0[COMMON] unsigned short 
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;  x               2    2[COMMON] unsigned short 
  2973 ;; Return value:  Size  Location     Type
  2974 ;;		None               void
  2975 ;; Registers used:
  2976 ;;		wreg, status,2, status,0, pclath, cstack
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2982 ;;      Params:         2       0       0       0
  2983 ;;      Locals:         2       0       0       0
  2984 ;;      Temps:          0       0       0       0
  2985 ;;      Totals:         4       0       0       0
  2986 ;;Total ram usage:        4 bytes
  2987 ;; Hardware stack levels used:    1
  2988 ;; Hardware stack levels required when called:    1
  2989 ;; This function calls:
  2990 ;;		_msecbase
  2991 ;; This function is called by:
  2992 ;;		_lcd_write
  2993 ;;		_lcd_clear
  2994 ;;		_lcd_init
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           psect	text462
  2998                           	file	"pause.c"
  2999                           	line	10
  3000                           	global	__size_of_pause
  3001  0019                     	__size_of_pause	equ	__end_of_pause-_pause
  3002                           	
  3003  03A1                     _pause:	
  3004                           	opt	stack 1
  3005                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
  3006                           	line	13
  3007                           	
  3008  03A1                     l7453:	
  3009                           ;pause.c: 11: unsigned short x;
  3010                           ;pause.c: 13: for (x=0; x<=usvalue; x++)
  3011  03A1  01F2               	clrf	(pause@x)
  3012  03A2  01F3               	clrf	(pause@x+1)
  3013  03A3  2BAE               	goto	l7459
  3014                           	line	14
  3015                           	
  3016  03A4                     l3800:	
  3017                           	line	15
  3018                           	
  3019  03A4                     l7455:	
  3020                           ;pause.c: 14: {
  3021                           ;pause.c: 15: msecbase();
  3022  03A4  118A  236B  118A   	fcall	_msecbase
  3023                           	line	13
  3024                           	
  3025  03A7                     l7457:	
  3026  03A7  3001               	movlw	low(01h)
  3027  03A8  07F2               	addwf	(pause@x),f
  3028  03A9  1803               	skipnc
  3029  03AA  0AF3               	incf	(pause@x+1),f
  3030  03AB  3000               	movlw	high(01h)
  3031  03AC  07F3               	addwf	(pause@x+1),f
  3032  03AD  2BAE               	goto	l7459
  3033                           	
  3034  03AE                     l3799:	
  3035                           	
  3036  03AE                     l7459:	
  3037  03AE  0873               	movf	(pause@x+1),w
  3038  03AF  0271               	subwf	(pause@usvalue+1),w
  3039  03B0  1D03               	skipz
  3040  03B1  2BB4               	goto	u2735
  3041  03B2  0872               	movf	(pause@x),w
  3042  03B3  0270               	subwf	(pause@usvalue),w
  3043  03B4                     u2735:
  3044  03B4  1803               	skipnc
  3045  03B5  2BB7               	goto	u2731
  3046  03B6  2BB8               	goto	u2730
  3047  03B7                     u2731:
  3048  03B7  2BA4               	goto	l7455
  3049  03B8                     u2730:
  3050  03B8  2BB9               	goto	l3802
  3051                           	
  3052  03B9                     l3801:	
  3053                           	line	17
  3054                           	
  3055  03B9                     l3802:	
  3056  03B9  0008               	return
  3057                           	opt stack 0
  3058                           GLOBAL	__end_of_pause
  3059  03BA                     	__end_of_pause:
  3060 ;; =============== function _pause ends ============
  3061                           
  3062                           	signat	_pause,4216
  3063                           	global	___awmod
  3064                           psect	text463,local,class=CODE,delta=2
  3065                           global __ptext463
  3066  054A                     __ptext463:
  3067                           
  3068 ;; *************** function ___awmod *****************
  3069 ;; Defined at:
  3070 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  divisor         2    9[COMMON] int 
  3073 ;;  dividend        2   11[COMMON] int 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  sign            1    1[BANK0 ] unsigned char 
  3076 ;;  counter         1    0[BANK0 ] unsigned char 
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  2    9[COMMON] int 
  3079 ;; Registers used:
  3080 ;;		wreg, status,2, status,0
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3086 ;;      Params:         4       0       0       0
  3087 ;;      Locals:         0       2       0       0
  3088 ;;      Temps:          1       0       0       0
  3089 ;;      Totals:         5       2       0       0
  3090 ;;Total ram usage:        7 bytes
  3091 ;; Hardware stack levels used:    1
  3092 ;; This function calls:
  3093 ;;		Nothing
  3094 ;; This function is called by:
  3095 ;;		_DisplayData
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           psect	text463
  3099                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  3100                           	line	5
  3101                           	global	__size_of___awmod
  3102  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  3103                           	
  3104  054A                     ___awmod:	
  3105                           	opt	stack 4
  3106                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3107                           	line	8
  3108                           	
  3109  054A                     l7419:	
  3110  054A  1283               	bcf	status, 5	;RP0=0, select bank0
  3111  054B  1303               	bcf	status, 6	;RP1=0, select bank0
  3112  054C  01CA               	clrf	(___awmod@sign)
  3113                           	line	9
  3114  054D  1FFC               	btfss	(___awmod@dividend+1),7
  3115  054E  2D50               	goto	u2641
  3116  054F  2D51               	goto	u2640
  3117  0550                     u2641:
  3118  0550  2D5A               	goto	l7423
  3119  0551                     u2640:
  3120                           	line	10
  3121                           	
  3122  0551                     l7421:	
  3123  0551  09FB               	comf	(___awmod@dividend),f
  3124  0552  09FC               	comf	(___awmod@dividend+1),f
  3125  0553  0AFB               	incf	(___awmod@dividend),f
  3126  0554  1903               	skipnz
  3127  0555  0AFC               	incf	(___awmod@dividend+1),f
  3128                           	line	11
  3129  0556  01CA               	clrf	(___awmod@sign)
  3130  0557  1403               	bsf	status,0
  3131  0558  0DCA               	rlf	(___awmod@sign),f
  3132  0559  2D5A               	goto	l7423
  3133                           	line	12
  3134                           	
  3135  055A                     l5799:	
  3136                           	line	13
  3137                           	
  3138  055A                     l7423:	
  3139  055A  1FFA               	btfss	(___awmod@divisor+1),7
  3140  055B  2D5D               	goto	u2651
  3141  055C  2D5E               	goto	u2650
  3142  055D                     u2651:
  3143  055D  2D64               	goto	l7427
  3144  055E                     u2650:
  3145                           	line	14
  3146                           	
  3147  055E                     l7425:	
  3148  055E  09F9               	comf	(___awmod@divisor),f
  3149  055F  09FA               	comf	(___awmod@divisor+1),f
  3150  0560  0AF9               	incf	(___awmod@divisor),f
  3151  0561  1903               	skipnz
  3152  0562  0AFA               	incf	(___awmod@divisor+1),f
  3153  0563  2D64               	goto	l7427
  3154                           	
  3155  0564                     l5800:	
  3156                           	line	15
  3157                           	
  3158  0564                     l7427:	
  3159  0564  087A               	movf	(___awmod@divisor+1),w
  3160  0565  0479               	iorwf	(___awmod@divisor),w
  3161  0566  1903               	skipnz
  3162  0567  2D69               	goto	u2661
  3163  0568  2D6A               	goto	u2660
  3164  0569                     u2661:
  3165  0569  2DA0               	goto	l7445
  3166  056A                     u2660:
  3167                           	line	16
  3168                           	
  3169  056A                     l7429:	
  3170  056A  01C9               	clrf	(___awmod@counter)
  3171  056B  1403               	bsf	status,0
  3172  056C  0DC9               	rlf	(___awmod@counter),f
  3173                           	line	17
  3174  056D  2D7A               	goto	l7435
  3175                           	
  3176  056E                     l5803:	
  3177                           	line	18
  3178                           	
  3179  056E                     l7431:	
  3180  056E  3001               	movlw	01h
  3181                           	
  3182  056F                     u2675:
  3183  056F  1003               	clrc
  3184  0570  0DF9               	rlf	(___awmod@divisor),f
  3185  0571  0DFA               	rlf	(___awmod@divisor+1),f
  3186  0572  3EFF               	addlw	-1
  3187  0573  1D03               	skipz
  3188  0574  2D6F               	goto	u2675
  3189                           	line	19
  3190                           	
  3191  0575                     l7433:	
  3192  0575  3001               	movlw	(01h)
  3193  0576  00FD               	movwf	(??___awmod+0)+0
  3194  0577  087D               	movf	(??___awmod+0)+0,w
  3195  0578  07C9               	addwf	(___awmod@counter),f
  3196  0579  2D7A               	goto	l7435
  3197                           	line	20
  3198                           	
  3199  057A                     l5802:	
  3200                           	line	17
  3201                           	
  3202  057A                     l7435:	
  3203  057A  1FFA               	btfss	(___awmod@divisor+1),(15)&7
  3204  057B  2D7D               	goto	u2681
  3205  057C  2D7E               	goto	u2680
  3206  057D                     u2681:
  3207  057D  2D6E               	goto	l7431
  3208  057E                     u2680:
  3209  057E  2D80               	goto	l7437
  3210                           	
  3211  057F                     l5804:	
  3212  057F  2D80               	goto	l7437
  3213                           	line	21
  3214                           	
  3215  0580                     l5805:	
  3216                           	line	22
  3217                           	
  3218  0580                     l7437:	
  3219  0580  087A               	movf	(___awmod@divisor+1),w
  3220  0581  027C               	subwf	(___awmod@dividend+1),w
  3221  0582  1D03               	skipz
  3222  0583  2D86               	goto	u2695
  3223  0584  0879               	movf	(___awmod@divisor),w
  3224  0585  027B               	subwf	(___awmod@dividend),w
  3225  0586                     u2695:
  3226  0586  1C03               	skipc
  3227  0587  2D89               	goto	u2691
  3228  0588  2D8A               	goto	u2690
  3229  0589                     u2691:
  3230  0589  2D91               	goto	l7441
  3231  058A                     u2690:
  3232                           	line	23
  3233                           	
  3234  058A                     l7439:	
  3235  058A  0879               	movf	(___awmod@divisor),w
  3236  058B  02FB               	subwf	(___awmod@dividend),f
  3237  058C  087A               	movf	(___awmod@divisor+1),w
  3238  058D  1C03               	skipc
  3239  058E  03FC               	decf	(___awmod@dividend+1),f
  3240  058F  02FC               	subwf	(___awmod@dividend+1),f
  3241  0590  2D91               	goto	l7441
  3242                           	
  3243  0591                     l5806:	
  3244                           	line	24
  3245                           	
  3246  0591                     l7441:	
  3247  0591  3001               	movlw	01h
  3248                           	
  3249  0592                     u2705:
  3250  0592  1003               	clrc
  3251  0593  0CFA               	rrf	(___awmod@divisor+1),f
  3252  0594  0CF9               	rrf	(___awmod@divisor),f
  3253  0595  3EFF               	addlw	-1
  3254  0596  1D03               	skipz
  3255  0597  2D92               	goto	u2705
  3256                           	line	25
  3257                           	
  3258  0598                     l7443:	
  3259  0598  3001               	movlw	low(01h)
  3260  0599  02C9               	subwf	(___awmod@counter),f
  3261  059A  1D03               	btfss	status,2
  3262  059B  2D9D               	goto	u2711
  3263  059C  2D9E               	goto	u2710
  3264  059D                     u2711:
  3265  059D  2D80               	goto	l7437
  3266  059E                     u2710:
  3267  059E  2DA0               	goto	l7445
  3268                           	
  3269  059F                     l5807:	
  3270  059F  2DA0               	goto	l7445
  3271                           	line	26
  3272                           	
  3273  05A0                     l5801:	
  3274                           	line	27
  3275                           	
  3276  05A0                     l7445:	
  3277  05A0  084A               	movf	(___awmod@sign),w
  3278  05A1  1D03               	skipz
  3279  05A2  2DA4               	goto	u2720
  3280  05A3  2DAA               	goto	l7449
  3281  05A4                     u2720:
  3282                           	line	28
  3283                           	
  3284  05A4                     l7447:	
  3285  05A4  09FB               	comf	(___awmod@dividend),f
  3286  05A5  09FC               	comf	(___awmod@dividend+1),f
  3287  05A6  0AFB               	incf	(___awmod@dividend),f
  3288  05A7  1903               	skipnz
  3289  05A8  0AFC               	incf	(___awmod@dividend+1),f
  3290  05A9  2DAA               	goto	l7449
  3291                           	
  3292  05AA                     l5808:	
  3293                           	line	29
  3294                           	
  3295  05AA                     l7449:	
  3296  05AA  087C               	movf	(___awmod@dividend+1),w
  3297  05AB  01FA               	clrf	(?___awmod+1)
  3298  05AC  07FA               	addwf	(?___awmod+1)
  3299  05AD  087B               	movf	(___awmod@dividend),w
  3300  05AE  01F9               	clrf	(?___awmod)
  3301  05AF  07F9               	addwf	(?___awmod)
  3302                           
  3303  05B0  2DB1               	goto	l5809
  3304                           	
  3305  05B1                     l7451:	
  3306                           	line	30
  3307                           	
  3308  05B1                     l5809:	
  3309  05B1  0008               	return
  3310                           	opt stack 0
  3311                           GLOBAL	__end_of___awmod
  3312  05B2                     	__end_of___awmod:
  3313 ;; =============== function ___awmod ends ============
  3314                           
  3315                           	signat	___awmod,8314
  3316                           	global	___awdiv
  3317                           psect	text464,local,class=CODE,delta=2
  3318                           global __ptext464
  3319  061D                     __ptext464:
  3320                           
  3321 ;; *************** function ___awdiv *****************
  3322 ;; Defined at:
  3323 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;  divisor         2    0[COMMON] int 
  3326 ;;  dividend        2    2[COMMON] int 
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;  quotient        2    7[COMMON] int 
  3329 ;;  sign            1    6[COMMON] unsigned char 
  3330 ;;  counter         1    5[COMMON] unsigned char 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  2    0[COMMON] int 
  3333 ;; Registers used:
  3334 ;;		wreg, status,2, status,0
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3340 ;;      Params:         4       0       0       0
  3341 ;;      Locals:         4       0       0       0
  3342 ;;      Temps:          1       0       0       0
  3343 ;;      Totals:         9       0       0       0
  3344 ;;Total ram usage:        9 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; This function calls:
  3347 ;;		Nothing
  3348 ;; This function is called by:
  3349 ;;		_DisplayData
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           psect	text464
  3353                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  3354                           	line	5
  3355                           	global	__size_of___awdiv
  3356  0074                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  3357                           	
  3358  061D                     ___awdiv:	
  3359                           	opt	stack 4
  3360                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3361                           	line	9
  3362                           	
  3363  061D                     l7379:	
  3364  061D  01F6               	clrf	(___awdiv@sign)
  3365                           	line	10
  3366  061E  1FF1               	btfss	(___awdiv@divisor+1),7
  3367  061F  2E21               	goto	u2541
  3368  0620  2E22               	goto	u2540
  3369  0621                     u2541:
  3370  0621  2E2B               	goto	l7383
  3371  0622                     u2540:
  3372                           	line	11
  3373                           	
  3374  0622                     l7381:	
  3375  0622  09F0               	comf	(___awdiv@divisor),f
  3376  0623  09F1               	comf	(___awdiv@divisor+1),f
  3377  0624  0AF0               	incf	(___awdiv@divisor),f
  3378  0625  1903               	skipnz
  3379  0626  0AF1               	incf	(___awdiv@divisor+1),f
  3380                           	line	12
  3381  0627  01F6               	clrf	(___awdiv@sign)
  3382  0628  1403               	bsf	status,0
  3383  0629  0DF6               	rlf	(___awdiv@sign),f
  3384  062A  2E2B               	goto	l7383
  3385                           	line	13
  3386                           	
  3387  062B                     l5731:	
  3388                           	line	14
  3389                           	
  3390  062B                     l7383:	
  3391  062B  1FF3               	btfss	(___awdiv@dividend+1),7
  3392  062C  2E2E               	goto	u2551
  3393  062D  2E2F               	goto	u2550
  3394  062E                     u2551:
  3395  062E  2E39               	goto	l7389
  3396  062F                     u2550:
  3397                           	line	15
  3398                           	
  3399  062F                     l7385:	
  3400  062F  09F2               	comf	(___awdiv@dividend),f
  3401  0630  09F3               	comf	(___awdiv@dividend+1),f
  3402  0631  0AF2               	incf	(___awdiv@dividend),f
  3403  0632  1903               	skipnz
  3404  0633  0AF3               	incf	(___awdiv@dividend+1),f
  3405                           	line	16
  3406                           	
  3407  0634                     l7387:	
  3408  0634  3001               	movlw	(01h)
  3409  0635  00F4               	movwf	(??___awdiv+0)+0
  3410  0636  0874               	movf	(??___awdiv+0)+0,w
  3411  0637  06F6               	xorwf	(___awdiv@sign),f
  3412  0638  2E39               	goto	l7389
  3413                           	line	17
  3414                           	
  3415  0639                     l5732:	
  3416                           	line	18
  3417                           	
  3418  0639                     l7389:	
  3419  0639  01F7               	clrf	(___awdiv@quotient)
  3420  063A  01F8               	clrf	(___awdiv@quotient+1)
  3421                           	line	19
  3422                           	
  3423  063B                     l7391:	
  3424  063B  0871               	movf	(___awdiv@divisor+1),w
  3425  063C  0470               	iorwf	(___awdiv@divisor),w
  3426  063D  1903               	skipnz
  3427  063E  2E40               	goto	u2561
  3428  063F  2E41               	goto	u2560
  3429  0640                     u2561:
  3430  0640  2E7F               	goto	l7411
  3431  0641                     u2560:
  3432                           	line	20
  3433                           	
  3434  0641                     l7393:	
  3435  0641  01F5               	clrf	(___awdiv@counter)
  3436  0642  1403               	bsf	status,0
  3437  0643  0DF5               	rlf	(___awdiv@counter),f
  3438                           	line	21
  3439  0644  2E51               	goto	l7399
  3440                           	
  3441  0645                     l5735:	
  3442                           	line	22
  3443                           	
  3444  0645                     l7395:	
  3445  0645  3001               	movlw	01h
  3446                           	
  3447  0646                     u2575:
  3448  0646  1003               	clrc
  3449  0647  0DF0               	rlf	(___awdiv@divisor),f
  3450  0648  0DF1               	rlf	(___awdiv@divisor+1),f
  3451  0649  3EFF               	addlw	-1
  3452  064A  1D03               	skipz
  3453  064B  2E46               	goto	u2575
  3454                           	line	23
  3455                           	
  3456  064C                     l7397:	
  3457  064C  3001               	movlw	(01h)
  3458  064D  00F4               	movwf	(??___awdiv+0)+0
  3459  064E  0874               	movf	(??___awdiv+0)+0,w
  3460  064F  07F5               	addwf	(___awdiv@counter),f
  3461  0650  2E51               	goto	l7399
  3462                           	line	24
  3463                           	
  3464  0651                     l5734:	
  3465                           	line	21
  3466                           	
  3467  0651                     l7399:	
  3468  0651  1FF1               	btfss	(___awdiv@divisor+1),(15)&7
  3469  0652  2E54               	goto	u2581
  3470  0653  2E55               	goto	u2580
  3471  0654                     u2581:
  3472  0654  2E45               	goto	l7395
  3473  0655                     u2580:
  3474  0655  2E57               	goto	l7401
  3475                           	
  3476  0656                     l5736:	
  3477  0656  2E57               	goto	l7401
  3478                           	line	25
  3479                           	
  3480  0657                     l5737:	
  3481                           	line	26
  3482                           	
  3483  0657                     l7401:	
  3484  0657  3001               	movlw	01h
  3485                           	
  3486  0658                     u2595:
  3487  0658  1003               	clrc
  3488  0659  0DF7               	rlf	(___awdiv@quotient),f
  3489  065A  0DF8               	rlf	(___awdiv@quotient+1),f
  3490  065B  3EFF               	addlw	-1
  3491  065C  1D03               	skipz
  3492  065D  2E58               	goto	u2595
  3493                           	line	27
  3494  065E  0871               	movf	(___awdiv@divisor+1),w
  3495  065F  0273               	subwf	(___awdiv@dividend+1),w
  3496  0660  1D03               	skipz
  3497  0661  2E64               	goto	u2605
  3498  0662  0870               	movf	(___awdiv@divisor),w
  3499  0663  0272               	subwf	(___awdiv@dividend),w
  3500  0664                     u2605:
  3501  0664  1C03               	skipc
  3502  0665  2E67               	goto	u2601
  3503  0666  2E68               	goto	u2600
  3504  0667                     u2601:
  3505  0667  2E70               	goto	l7407
  3506  0668                     u2600:
  3507                           	line	28
  3508                           	
  3509  0668                     l7403:	
  3510  0668  0870               	movf	(___awdiv@divisor),w
  3511  0669  02F2               	subwf	(___awdiv@dividend),f
  3512  066A  0871               	movf	(___awdiv@divisor+1),w
  3513  066B  1C03               	skipc
  3514  066C  03F3               	decf	(___awdiv@dividend+1),f
  3515  066D  02F3               	subwf	(___awdiv@dividend+1),f
  3516                           	line	29
  3517                           	
  3518  066E                     l7405:	
  3519  066E  1477               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  3520  066F  2E70               	goto	l7407
  3521                           	line	30
  3522                           	
  3523  0670                     l5738:	
  3524                           	line	31
  3525                           	
  3526  0670                     l7407:	
  3527  0670  3001               	movlw	01h
  3528                           	
  3529  0671                     u2615:
  3530  0671  1003               	clrc
  3531  0672  0CF1               	rrf	(___awdiv@divisor+1),f
  3532  0673  0CF0               	rrf	(___awdiv@divisor),f
  3533  0674  3EFF               	addlw	-1
  3534  0675  1D03               	skipz
  3535  0676  2E71               	goto	u2615
  3536                           	line	32
  3537                           	
  3538  0677                     l7409:	
  3539  0677  3001               	movlw	low(01h)
  3540  0678  02F5               	subwf	(___awdiv@counter),f
  3541  0679  1D03               	btfss	status,2
  3542  067A  2E7C               	goto	u2621
  3543  067B  2E7D               	goto	u2620
  3544  067C                     u2621:
  3545  067C  2E57               	goto	l7401
  3546  067D                     u2620:
  3547  067D  2E7F               	goto	l7411
  3548                           	
  3549  067E                     l5739:	
  3550  067E  2E7F               	goto	l7411
  3551                           	line	33
  3552                           	
  3553  067F                     l5733:	
  3554                           	line	34
  3555                           	
  3556  067F                     l7411:	
  3557  067F  0876               	movf	(___awdiv@sign),w
  3558  0680  1D03               	skipz
  3559  0681  2E83               	goto	u2630
  3560  0682  2E89               	goto	l7415
  3561  0683                     u2630:
  3562                           	line	35
  3563                           	
  3564  0683                     l7413:	
  3565  0683  09F7               	comf	(___awdiv@quotient),f
  3566  0684  09F8               	comf	(___awdiv@quotient+1),f
  3567  0685  0AF7               	incf	(___awdiv@quotient),f
  3568  0686  1903               	skipnz
  3569  0687  0AF8               	incf	(___awdiv@quotient+1),f
  3570  0688  2E89               	goto	l7415
  3571                           	
  3572  0689                     l5740:	
  3573                           	line	36
  3574                           	
  3575  0689                     l7415:	
  3576  0689  0878               	movf	(___awdiv@quotient+1),w
  3577  068A  01F1               	clrf	(?___awdiv+1)
  3578  068B  07F1               	addwf	(?___awdiv+1)
  3579  068C  0877               	movf	(___awdiv@quotient),w
  3580  068D  01F0               	clrf	(?___awdiv)
  3581  068E  07F0               	addwf	(?___awdiv)
  3582                           
  3583  068F  2E90               	goto	l5741
  3584                           	
  3585  0690                     l7417:	
  3586                           	line	37
  3587                           	
  3588  0690                     l5741:	
  3589  0690  0008               	return
  3590                           	opt stack 0
  3591                           GLOBAL	__end_of___awdiv
  3592  0691                     	__end_of___awdiv:
  3593 ;; =============== function ___awdiv ends ============
  3594                           
  3595                           	signat	___awdiv,8314
  3596                           	global	___bmul
  3597                           psect	text465,local,class=CODE,delta=2
  3598                           global __ptext465
  3599  0389                     __ptext465:
  3600                           
  3601 ;; *************** function ___bmul *****************
  3602 ;; Defined at:
  3603 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  multiplier      1    wreg     unsigned char 
  3606 ;;  multiplicand    1    0[COMMON] unsigned char 
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;  multiplier      1    3[COMMON] unsigned char 
  3609 ;;  product         1    2[COMMON] unsigned char 
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  1    wreg      unsigned char 
  3612 ;; Registers used:
  3613 ;;		wreg, status,2, status,0
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3619 ;;      Params:         1       0       0       0
  3620 ;;      Locals:         2       0       0       0
  3621 ;;      Temps:          1       0       0       0
  3622 ;;      Totals:         4       0       0       0
  3623 ;;Total ram usage:        4 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; This function calls:
  3626 ;;		Nothing
  3627 ;; This function is called by:
  3628 ;;		_RefreshDisplay
  3629 ;;		_RecieveSensorData
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           psect	text465
  3633                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  3634                           	line	3
  3635                           	global	__size_of___bmul
  3636  0018                     	__size_of___bmul	equ	__end_of___bmul-___bmul
  3637                           	
  3638  0389                     ___bmul:	
  3639                           	opt	stack 5
  3640                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3641                           ;___bmul@multiplier stored from wreg
  3642  0389  00F3               	movwf	(___bmul@multiplier)
  3643                           	line	4
  3644                           	
  3645  038A                     l7353:	
  3646  038A  01F2               	clrf	(___bmul@product)
  3647                           	line	6
  3648                           	
  3649  038B                     l5585:	
  3650                           	line	7
  3651  038B  1C73               	btfss	(___bmul@multiplier),(0)&7
  3652  038C  2B8E               	goto	u2481
  3653  038D  2B8F               	goto	u2480
  3654  038E                     u2481:
  3655  038E  2B94               	goto	l7357
  3656  038F                     u2480:
  3657                           	line	8
  3658                           	
  3659  038F                     l7355:	
  3660  038F  0870               	movf	(___bmul@multiplicand),w
  3661  0390  00F1               	movwf	(??___bmul+0)+0
  3662  0391  0871               	movf	(??___bmul+0)+0,w
  3663  0392  07F2               	addwf	(___bmul@product),f
  3664  0393  2B94               	goto	l7357
  3665                           	
  3666  0394                     l5586:	
  3667                           	line	9
  3668                           	
  3669  0394                     l7357:	
  3670  0394  1003               	clrc
  3671  0395  0DF0               	rlf	(___bmul@multiplicand),f
  3672                           
  3673                           	line	10
  3674                           	
  3675  0396                     l7359:	
  3676  0396  1003               	clrc
  3677  0397  0CF3               	rrf	(___bmul@multiplier),f
  3678                           
  3679                           	line	11
  3680                           	
  3681  0398                     l7361:	
  3682  0398  08F3               	movf	(___bmul@multiplier),f
  3683  0399  1D03               	skipz
  3684  039A  2B9C               	goto	u2491
  3685  039B  2B9D               	goto	u2490
  3686  039C                     u2491:
  3687  039C  2B8B               	goto	l5585
  3688  039D                     u2490:
  3689  039D  2B9E               	goto	l7363
  3690                           	
  3691  039E                     l5587:	
  3692                           	line	12
  3693                           	
  3694  039E                     l7363:	
  3695  039E  0872               	movf	(___bmul@product),w
  3696  039F  2BA0               	goto	l5588
  3697                           	
  3698  03A0                     l7365:	
  3699                           	line	13
  3700                           	
  3701  03A0                     l5588:	
  3702  03A0  0008               	return
  3703                           	opt stack 0
  3704                           GLOBAL	__end_of___bmul
  3705  03A1                     	__end_of___bmul:
  3706 ;; =============== function ___bmul ends ============
  3707                           
  3708                           	signat	___bmul,8313
  3709                           	global	_msecbase
  3710                           psect	text466,local,class=CODE,delta=2
  3711                           global __ptext466
  3712  036B                     __ptext466:
  3713                           
  3714 ;; *************** function _msecbase *****************
  3715 ;; Defined at:
  3716 ;;		line 22 in file "msecbase.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;		None
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;		None
  3721 ;; Return value:  Size  Location     Type
  3722 ;;		None               void
  3723 ;; Registers used:
  3724 ;;		wreg
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3730 ;;      Params:         0       0       0       0
  3731 ;;      Locals:         0       0       0       0
  3732 ;;      Temps:          0       0       0       0
  3733 ;;      Totals:         0       0       0       0
  3734 ;;Total ram usage:        0 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; This function calls:
  3737 ;;		Nothing
  3738 ;; This function is called by:
  3739 ;;		_pause
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           psect	text466
  3743                           	file	"msecbase.c"
  3744                           	line	22
  3745                           	global	__size_of_msecbase
  3746  000F                     	__size_of_msecbase	equ	__end_of_msecbase-_msecbase
  3747                           	
  3748  036B                     _msecbase:	
  3749                           	opt	stack 1
  3750                           ; Regs used in _msecbase: [wreg]
  3751                           	line	23
  3752                           	
  3753  036B                     l7351:	
  3754                           ;msecbase.c: 23: OPTION = 0b00000001;
  3755  036B  3001               	movlw	(01h)
  3756  036C  1683               	bsf	status, 5	;RP0=1, select bank1
  3757  036D  1303               	bcf	status, 6	;RP1=0, select bank1
  3758  036E  0081               	movwf	(129)^080h	;volatile
  3759                           	line	24
  3760                           ;msecbase.c: 24: TMR0 = 0xD;
  3761  036F  300D               	movlw	(0Dh)
  3762  0370  1283               	bcf	status, 5	;RP0=0, select bank0
  3763  0371  1303               	bcf	status, 6	;RP1=0, select bank0
  3764  0372  0081               	movwf	(1)	;volatile
  3765                           	line	25
  3766                           ;msecbase.c: 25: while(!T0IF);
  3767  0373  2B74               	goto	l2907
  3768                           	
  3769  0374                     l2908:	
  3770                           	
  3771  0374                     l2907:	
  3772  0374  1D0B               	btfss	(90/8),(90)&7
  3773  0375  2B77               	goto	u2471
  3774  0376  2B78               	goto	u2470
  3775  0377                     u2471:
  3776  0377  2B74               	goto	l2907
  3777  0378                     u2470:
  3778                           	
  3779  0378                     l2909:	
  3780                           	line	26
  3781                           ;msecbase.c: 26: T0IF = 0;
  3782  0378  110B               	bcf	(90/8),(90)&7
  3783                           	line	27
  3784                           	
  3785  0379                     l2910:	
  3786  0379  0008               	return
  3787                           	opt stack 0
  3788                           GLOBAL	__end_of_msecbase
  3789  037A                     	__end_of_msecbase:
  3790 ;; =============== function _msecbase ends ============
  3791                           
  3792                           	signat	_msecbase,88
  3793                           	global	_onewire_init
  3794                           psect	text467,local,class=CODE,delta=2
  3795                           global __ptext467
  3796  0331                     __ptext467:
  3797                           
  3798 ;; *************** function _onewire_init *****************
  3799 ;; Defined at:
  3800 ;;		line 136 in file "C:/Users/Dave/MPLABXProjects/CLDC001.X/CLDTP1.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;		None
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;		None
  3805 ;; Return value:  Size  Location     Type
  3806 ;;		None               void
  3807 ;; Registers used:
  3808 ;;		None
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3814 ;;      Params:         0       0       0       0
  3815 ;;      Locals:         0       0       0       0
  3816 ;;      Temps:          0       0       0       0
  3817 ;;      Totals:         0       0       0       0
  3818 ;;Total ram usage:        0 bytes
  3819 ;; Hardware stack levels used:    1
  3820 ;; This function calls:
  3821 ;;		Nothing
  3822 ;; This function is called by:
  3823 ;;		_main
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           psect	text467
  3827                           	file	"C:/Users/Dave/MPLABXProjects/CLDC001.X/CLDTP1.c"
  3828                           	line	136
  3829                           	global	__size_of_onewire_init
  3830  0004                     	__size_of_onewire_init	equ	__end_of_onewire_init-_onewire_init
  3831                           	
  3832  0331                     _onewire_init:	
  3833                           	opt	stack 7
  3834                           ; Regs used in _onewire_init: []
  3835                           	line	137
  3836                           	
  3837  0331                     l7349:	
  3838                           ;CLDTP1.c: 137: TRISB7 = 1;
  3839  0331  1683               	bsf	status, 5	;RP0=1, select bank1
  3840  0332  1303               	bcf	status, 6	;RP1=0, select bank1
  3841  0333  1786               	bsf	(1079/8)^080h,(1079)&7
  3842                           	line	138
  3843                           	
  3844  0334                     l4732:	
  3845  0334  0008               	return
  3846                           	opt stack 0
  3847                           GLOBAL	__end_of_onewire_init
  3848  0335                     	__end_of_onewire_init:
  3849 ;; =============== function _onewire_init ends ============
  3850                           
  3851                           	signat	_onewire_init,88
  3852                           psect	text468,local,class=CODE,delta=2
  3853                           global __ptext468
  3854  0000                     __ptext468:
  3855                           	global	btemp
  3856  007E                     	btemp set 07Eh
  3857                           
  3858                           	DABS	1,126,2	;btemp
  3859                           	global	wtemp0
  3860  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sat Aug 20 16:08:00 2016

                             pc 0002                  ___bmul@product 0072                              _RD 0C60  
                            _b0 0048                              _WR 0C61                    ___awdiv@sign 0076  
                            fsr 0004                             _GIE 005F                             _RA1 0029  
                           _RA2 002A                             _RA4 002C                             fsr0 0004  
                           indf 0000                    ___awmod@sign 004A                     lcd_goto@pos 0076  
                          l2180 03D6                            l1452 04ED                            l1461 07FF  
                          l2183 0388                            l1455 073A                            l2192 0345  
                          l1464 0527                            l1465 053A                            l2186 03E9  
                          l1458 035C                            l1466 0546                            l2187 03DC  
                          l2195 034F                            l1467 0547                            l2188 03F4  
                          l1468 0548                            l2189 03F4                            l1469 0548  
                          l2198 0492                            l2910 0379                            l3800 03A4  
                          l3801 03B9                            l3802 03B9                            l2907 0374  
                          l2908 0374                            l4700 05D6                            l2909 0378  
                          l4701 05D8                            l4710 061C                            l4702 05E9  
                          l4703 05EA                            l4704 05EA                            l4720 0414  
                          l4705 05EF                            l4713 043B                            l4721 0420  
                          l4706 0606                            l4722 0420                            l4714 03F9  
                          l4707 05FE                            l4723 0427                            l4715 03FA  
                          l4732 0334                            l4708 05FE                            l4724 043A  
                          l4716 03FA                            l4709 0605                            l4725 0442  
                          l4717 0401                            l4726 0442                            l4718 040D  
                          l4719 040D                            l5800 0564                            l7401 0657  
                          l5801 05A0                            l5802 057A                            l7403 0668  
                          l7411 067F                            l5731 062B                            l5803 056E  
                          l5740 0689                            l5732 0639                            l5804 057F  
                          l5741 0690                            l7413 0683                            l5733 067F  
                          l7405 066E                            l5805 0580                            l7421 0551  
                          l7501 041A                            l5734 0651                            l5806 0591  
                          l7351 036B                            l7415 0689                            l7407 0670  
                          l5735 0645                            l5807 059F                            l7431 056E  
                          l7423 055A                            l3799 03AE                            l7503 0427  
                          l7511 043B                            l5736 0656                            l5808 05AA  
                          l7361 0398                            l5585 038B                            l7353 038A  
                          l7417 0690                            l7409 0677                            l5737 0657  
                          l5809 05B1                            l7441 0591                            l7433 0575  
                          l7425 055E                            l7505 042D                            l7521 03D1  
                          l7513 03BB                            l7601 048E                            l5586 0394  
                          l5738 0670                            l4698 05C7                            l5587 039E  
                          l7363 039E                            l7355 038F                            l5739 067E  
                          l7451 05B1                            l7443 0598                            l7435 057A  
                          l7427 0564                            l7419 054A                            l4699 061A  
                          l7507 0433                            l7523 03D4                            l7515 03C2  
                          l7531 03D8                            l7611 06A7                            l7603 0691  
                          l5588 03A0                            l7349 0331                            l7365 03A0  
                          l7357 0394                            l7381 0622                            l7437 0580  
                          l7429 056A                            l7445 05A0                            l7453 03A1  
                          l7461 05B2                            l7509 0439                            l7525 03D5  
                          l7517 03CF                            l7533 03DC                            l7541 037D  
                          l7621 071A                            l7613 06AB                            l7605 0698  
                          l7359 0396                            l7391 063B                            l7383 062B  
                          l7447 05A4                            l7439 058A                            l7455 03A4  
                          l7471 05CC                            l7463 05B4                            l7519 03D0  
                          l7527 033E                            l7535 03E4                            l7543 0347  
                          l7551 04D9                            l7623 071E                            l7615 06C2  
                          l7607 069C                            l7631 073B                            l7393 0641  
                          l7385 062F                            l7449 05AA                            l7457 03A7  
                          l7481 05EF                            l7473 05D2                            l7465 05B8  
                          l7529 0341                            l7537 03E9                            l7545 034A  
                          l7561 044E                            l7553 0443                            l7625 0722  
                          l7617 06C6                            l7609 06A3                            l7641 07E9  
                          l7633 079E                            l7395 0645                            l7387 0634  
                          l7379 061D                            l7459 03AE                            l7491 061C  
                          l7483 05FD                            l7475 05D8                            l7467 05C6  
                          l7539 037A                            l7547 0493                            l7571 045E  
                          l7563 0451                            l7555 0446                            l7619 06DE  
                          l7627 0350                            l7643 07FC                            l7635 07B0  
                          l7651 04F9                            l7397 064C                            l7389 0639  
                          l7485 0606                            l7477 05DF                            l7469 05C7  
                          l7493 03F6                            l7549 04D5                            l7581 046B  
                          l7573 045F                            l7565 0452                            l7557 044A  
                          l7629 0359                            l7637 07C3                            l7661 0504  
                          l7653 04FA                            l7645 04EE                            l7399 0651  
                          l5799 055A                            l7487 060C                            l7479 05E3  
                          l7495 0401                            l7591 0481                            l7583 0472  
                          l7575 0460                            l7567 0453                            l7559 044D  
                          l7639 07D6                            l7671 0517                            l7663 0507  
                          l7655 04FB                            l7647 04F4                            l7489 061A  
                          l7497 0407                            l7593 0482                            l7585 0475  
                          l7577 0467                            l7569 045A                            l7681 0542  
                          l7673 0527                            l7665 050B                            l7657 04FE  
                          l7649 04F8                            l7499 0414                            l7595 0483  
                          l7587 0476                            l7579 046A                            l7675 0530  
                          l7667 050F                            l7659 0501                            l7597 0487  
                          l7589 047D                            l7677 0536                            l7669 0513  
                          l7599 048B                            l7679 053A                            STR_1 0016  
                          STR_2 0028                            STR_3 004C                            STR_4 003E  
                          STR_5 0052                            STR_6 0045                            STR_7 0034  
                          STR_8 0018                            STR_9 0008                            _T0IF 005A  
                          u2600 0668                            u2601 0667                            u2620 067D  
                          u2540 0622                            u2621 067C                            u2605 0664  
                          u2541 0621                            u2470 0378                            u2630 0683  
                          u2550 062F                            u2710 059E                            u2471 0377  
                          u2615 0671                            u2551 062E                            u2711 059D  
                          u2480 038F                            u2560 0641                            u2720 05A4  
                          u2640 0551                            u2800 0619                            u2481 038E  
                          u2561 0640                            u2705 0592                            u2641 0550  
                          u2801 0618                            u2490 039D                            u2650 055E  
                          u2730 03B8                            u2810 0400                            u2491 039C  
                          u2651 055D                            u2731 03B7                            u2811 03FF  
                          u2580 0655                            u2660 056A                            u2740 05C5  
                          u2820 0413                            u2581 0654                            u2661 0569  
                          u2805 0615                            u2741 05C4                            u2821 0412  
                          u2750 05D2                            u2830 0426                            u2575 0646  
                          u2735 03B4                            u2751 05D1                            u2831 0425  
                          u2680 057E                            u2760 05E3                            u2840 0433  
                          u2681 057D                            u2745 05C1                            u2841 0432  
                          u2690 058A                            u2770 05EE                            u2850 0441  
                          u2595 0658                            u2691 0589                            u2675 056F  
                          u2771 05ED                            u2851 0440                            u2907 051F  
                          u2780 05FC                            u2781 05FB                            u2917 0409  
                          u2790 0604                            u2870 03F3                            u2695 0586  
                          u2791 0603                            u2927 041C                            u2871 03F2  
                          u2880 0536                            u2785 05F8                            u2937 05C9  
                          u2865 03C5                            u2881 0535                            u2890 0542  
                          u2891 0541                            _RCIF 0065                            _TMR0 0001  
                          _WREN 0C62                            _TXIF 0064                            _main 04EE  
                          btemp 007E                            start 0000               ___bmul@multiplier 0073  
           __end_of_DisplayData 04EE                           ?_main 0070                 __end_of___awdiv 0691  
                         _EEADR 010D                 __end_of___awmod 05B2                           _CARRY 0018  
                         _ANSEL 011E                 ___awdiv@divisor 0070                 ___awdiv@counter 0075  
                         _RCREG 001A                           _RCSTA 0018                           _SPBRG 0099  
                         _PORTB 0006                           _PORTC 0007                           _TRISA 0085  
                         _TRISB 0086                           _TRISC 0087                           _TXREG 0019  
                         _TXSTA 0098                           _pause 03A1                   ??_ReceivePage 004E  
                         pclath 000A                           status 0003                           wtemp0 007E  
                  __end_of_main 054A                          ??_main 005A                          _EEDATA 010C  
                        ?_pause 0070                          _EECON1 018C                          _EECON2 018D  
              ___awdiv@dividend 0072                          _ANSELH 011F                ??_RefreshDisplay 004D  
                        _OSCCON 008F                          _OPTION 0081                          _TRISB5 0435  
                        _TRISB7 0437             __end_of_ReceivePage 035D                     _DisplayData 0493  
                   _DisplayPage 005E                __end_of_lcd_init 0493                __end_of_lcd_goto 0350  
                        ___bmul 0389                __end_of_lcd_puts 03F5                       ??___awdiv 0074  
                     ??___awmod 007D                ___awdiv@quotient 0077                 ___awmod@divisor 0079  
               ___awmod@counter 0049                __end_of_msecbase 037A                          clrloop 0336  
                        pause@x 0072         __size_of_onewire_listen 004E             ___bmul@multiplicand 0070  
                __pcstackCOMMON 0070                    __pidataBANK0 0330         onewire_listen@RxAddress 007B  
                 __end_of_pause 03BA         onewire_listen@TxAddress 0077              __size_of_lcd_clear 000F  
            __size_of_lcd_putch 0009              __size_of_lcd_write 001D                         ??_pause 0072  
                    __pbssBANK0 0020                     _ReceivePage 0350                      __pmaintext 04EE  
                       ?___bmul 0070                         _CM1CON0 0119                         _CM2CON0 011A  
                       _BAUDCTL 009B                       ?_lcd_init 0070                       ?_lcd_goto 0070  
             onewire_read@count 0073                       ?_lcd_puts 0070                   ?_onewire_init 0070  
                 ?_onewire_read 0070                       ?_msecbase 0070   RecieveSensorData@ControllerID 0059  
             __end_of_lcd_clear 0389                 __size_of___bmul 0018               __end_of_lcd_putch 0346  
                       ___awdiv 061D                         ___awmod 054A               __end_of_lcd_write 03D7  
              ___awmod@dividend 007B                      ??_lcd_init 0076                      ??_lcd_goto 0076  
                    ??_lcd_puts 0076                  _onewire_listen 03F5            end_of_initialization 0368  
                ??_onewire_init 0070                  ??_onewire_read 0070                      ??_msecbase 0070  
               DisplayData@data 004B                    ?_DisplayData 004B             onewire_read@databit 0072  
        __end_of_onewire_listen 0443                       _DataArray 0020                      lcd_putch@c 0076  
                    lcd_write@c 0075                  __end_of___bmul 03A1               _RecieveSensorData 073B  
           start_initialization 035D              ?_RecieveSensorData 0070                 ?_onewire_listen 0070  
         onewire_listen@Payload 007C              lcd_init@init_value 0077             ??_RecieveSensorData 004E  
                  ?_ReceivePage 0070           onewire_listen@address 0078  onewire_listen@message_recieved 0079  
                      ??___bmul 0071         __size_of_RefreshDisplay 00AA                     __pdataBANK0 005E  
     __end_of_RecieveSensorData 0800            __end_of_onewire_init 0335            __end_of_onewire_read 061D  
                  pause@usvalue 0070                   __pcstackBANK0 0049               __size_of_lcd_init 0050  
             __size_of_lcd_goto 000A               __size_of_lcd_puts 001E               __size_of_msecbase 000F  
                      ?___awdiv 0070                       __ptext450 073B                       __ptext451 0350  
                      ?___awmod 0079                       __ptext460 03F5                       __ptext452 0691  
                     __ptext461 05B2                       __ptext453 0443                       __ptext462 03A1  
                     __ptext454 0493                       __ptext463 054A                       __ptext455 0346  
                     __ptext464 061D                       __ptext456 037A                       __ptext465 0389  
                     __ptext457 03D7                       __ptext466 036B                       __ptext458 033D  
                     __ptext467 0331                       __ptext459 03BA                       __ptext468 0000  
          __size_of_DisplayData 005B                       _lcd_clear 037A                       __pstrings 0002  
                     _lcd_putch 033D                onewire_read@data 0075                       _lcd_write 03BA  
                __size_of_pause 0019                      ?_lcd_clear 0070      __size_of_RecieveSensorData 00C5  
                    ?_lcd_putch 0070                     __stringbase 0007                      ?_lcd_write 0070  
                     main@input 005D                       lcd_puts@s 0077         RecieveSensorData@HumidH 0057  
       RecieveSensorData@HumidL 0058         RecieveSensorData@Temp1H 004F         RecieveSensorData@Temp2H 0051  
       RecieveSensorData@Temp3H 0053         RecieveSensorData@Temp1L 0050         RecieveSensorData@Temp4H 0055  
       RecieveSensorData@Temp2L 0052         RecieveSensorData@Temp3L 0054         RecieveSensorData@Temp4L 0056  
          __size_of_ReceivePage 000D                  _RefreshDisplay 0691           __size_of_onewire_init 0004  
         __size_of_onewire_read 006B                __size_of___awdiv 0074                __size_of___awmod 0068  
              ??_onewire_listen 0076                        _lcd_init 0443                        _lcd_goto 0346  
                      _lcd_puts 03D7                   __size_of_main 005C                    _onewire_init 0331  
                      _msecbase 036B                    _onewire_read 05B2                        clear_ram 0335  
        __end_of_RefreshDisplay 073B                     ??_lcd_clear 0076                     ??_lcd_putch 0076  
                   ??_lcd_write 0074                       stringcode 0002                 ?_RefreshDisplay 0070  
                      stringdir 0002                        stringtab 0002                   ??_DisplayData 007E  
